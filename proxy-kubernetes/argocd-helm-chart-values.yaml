# Config values for the ArgoCD Helm Chart.
# For default values, see
# https://github.com/argoproj/argo-helm/blob/3a2858aa98f607b495d34db0da2a7a3ecad3eaa0/charts/argo-cd/values.yaml
server:
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    # -- Average CPU utilization percentage for the Argo CD server [HPA]
    targetCPUUtilizationPercentage: 70
    # -- Average memory utilization percentage for the Argo CD server [HPA]
    targetMemoryUtilizationPercentage: 70
  resources:
   requests:
     cpu: 100m
     memory: 48Mi
   limits:
     cpu: 200m
     memory: 128Mi
  pdb:
    enabled: true
    minAvailable: 1
    maxUnavailable: 0
  additionalProjects:
    - name: argocd-root
      namespace: argocd
      description: The top-level project
      sourceRepos:
        - '*'
      destinations:
        - namespace: '*'
          server: https://kubernetes.default.svc
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'

  additionalApplications:
    - name: argocd-root-app-of-apps
      namespace: argocd
      project: argocd-root
      source:
        repoURL: https://github.com/GiganticMinecraft/seichi_infra
        targetRevision: main
        path: proxy-kubernetes/apps/root
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: -1
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 2m

  configEnabled: true
  # -- [General Argo CD configuration]
  config:
    # Argo CD instance label key
    application.instanceLabelKey: argocd.argoproj.io/instance
    kustomize.buildOptions: --load-restrictor LoadRestrictionsNone
    ## Following settings are required when configuring SSO
    # Argo CD's externally facing base URL (optional).
    url: https://argocd.bungee-proxy-public.seichi.click
    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: 6d77699f96a51159ce39
            clientSecret: $argocd-github-oauth-app-secret:ARGOCD_GITHUB_OAUTH_APP_SECRET
            orgs:
            - name: GiganticMinecraft
    admin.enabled: "false"

  rbacConfig:
    # policy.csv is an file containing user-defined RBAC policies and role definitions (optional).
    # Policy rules are in the form:
    #   p, subject, resource, action, object, effect
    # Role definitions and bindings are in the form:
    #   g, subject, inherited-subject
    # See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information.
    policy.csv: |
      g, GiganticMinecraft:admin-team, role:admin
      g, GiganticMinecraft:infra-collaborator, role:admin
    # policy.default is the name of the default role which Argo CD will falls back to, when
    # authorizing API requests (optional). If omitted or empty, users may be still be able to login,
    # but will see no apps, projects, etc...
    policy.default: role:readonly

controller:
  enableStatefulSet: true
  resources:
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 250m
     memory: 128Mi
  pdb:
    enabled: true
    minAvailable: 1
    maxUnavailable: 0

dex:
  resources:
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 50m
     memory: 64Mi
  pdb:
    enabled: true
    minAvailable: 1
    maxUnavailable: 0

redis:
  resources:
   limits:
     cpu: 200m
     memory: 64Mi
   requests:
     cpu: 100m
     memory: 16Mi

repoServer:
  replicaCount: 1
  resources:
   limits:
     cpu: 200m
     memory: 128Mi
   requests:
     cpu: 50m
     memory: 48Mi

applicationSet:
  replicaCount: 1
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

notifications:
  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 100m
      memory: 64Mi
