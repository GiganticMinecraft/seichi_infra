# Config values for the ArgoCD Helm Chart.
# For default values, see
# https://github.com/argoproj/argo-helm/blob/3a2858aa98f607b495d34db0da2a7a3ecad3eaa0/charts/argo-cd/values.yaml
crds:
  install: true
  keep: true
  annotations:
    meta.helm.sh/release-namespace: argocd

server:
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    # -- Average CPU utilization percentage (to the requested resource) for the Argo CD server [HPA]
    targetCPUUtilizationPercentage: 90
    # -- Average memory utilization percentage (to the requested resource) for the Argo CD server [HPA]
    targetMemoryUtilizationPercentage: 175
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  pdb:
    enabled: true
    minAvailable: 1
    maxUnavailable: 0
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

configs:
  cm:
    create: true
    # Argo CD instance label key
    application.instanceLabelKey: argocd.argoproj.io/instance
    kustomize.buildOptions: --load-restrictor LoadRestrictionsNone
    ## Following settings are required when configuring SSO
    # Argo CD's externally facing base URL (optional).
    url: https://argocd.onp-k8s.admin.seichi.click
    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: e7e08e1b813a638bdd99
            clientSecret: $argocd-github-oauth-app-secret:ARGOCD_GITHUB_OAUTH_APP_SECRET
            orgs:
            - name: GiganticMinecraft
      staticClients:
        - id: argo-workflows-sso
          name: Argo Workflow
          redirectURIs:
            - https://argo-workflows.onp-k8s.admin.seichi.click/oauth2/callback
          secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
    admin.enabled: false
  rbac:
    create: true
    # policy.csv is an file containing user-defined RBAC policies and role definitions (optional).
    # Policy rules are in the form:
    #   p, subject, resource, action, object, effect
    # Role definitions and bindings are in the form:
    #   g, subject, inherited-subject
    # See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information.
    policy.csv: |
      g, GiganticMinecraft:admin-team, role:admin
    # policy.default is the name of the default role which Argo CD will falls back to, when
    # authorizing API requests (optional). If omitted or empty, users may be still be able to login,
    # but will see no apps, projects, etc...
    policy.default: role:readonly

controller:
  resources:
    requests:
      cpu: 250m
      memory: 768Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

dex:
  env:
    - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: argo-workflows-sso
          key: client-secret
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
  livenessProbe:
    enabled: true
    timeoutSeconds: 1
  readinessProbe:
    enabled: true

redis:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

repoServer:
  replicaCount: 1
  resources:
    requests:
      cpu: 500m
      memory: 128Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

applicationSet:
  replicaCount: 1
  resources:
    requests:
      cpu: 500m
      memory: 128Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

notifications:
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
