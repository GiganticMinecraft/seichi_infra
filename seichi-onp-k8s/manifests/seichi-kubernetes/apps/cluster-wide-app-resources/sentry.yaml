apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sentry
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: sentry
    repoURL: https://sentry-kubernetes.github.io/charts
    targetRevision: 14.1.1
    helm:
      releaseName: sentry
      values: |
        sentry:
          singleOrganization: false
          web:
            # if using filestore backend filesystem with RWO access, set strategyType to Recreate
            strategyType: Recreate
            replicas: 1

        system:
          ## be sure to include the scheme on the url, for example: "https://sentry.example.com"
          url: "https://sentry.onp-k8s.admin.seichi.click"

        auth:
          register: false

        service:
          name: sentry
          type: ClusterIP
          externalPort: 9000

        nginx:
          enabled: true

        filestore:
          # Set to one of filesystem, gcs or s3 as supported by Sentry.
          backend: filesystem
          filesystem:
            path: /var/lib/sentry/files
            persistence:
              enabled: true
              accessMode: ReadWriteOnce
              size: 40Gi

        config:
          # No YAML Extension Config Given
          configYml: {}
          sentryConfPy: |
            # No Python Extension Config Given
          snubaSettingsPy: |
            # No Python Extension Config Given
          relay: |
            # No YAML relay config given

        clickhouse:
          enabled: true
          clickhouse:
            persistentVolumeClaim:
              enabled: true
              dataPersistentVolume:
                enabled: true
                accessModes:
                  - "ReadWriteOnce"
                storage: "40Gi"
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              runAsNonRoot: false

        zookeeper:
          enabled: true
          podSecurityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            fsGroup: 1001
          containerSecurityContext:
            runAsUser: 1001
            runAsNonRoot: true

        # Settings for Kafka.
        # See https://github.com/bitnami/charts/tree/master/bitnami/kafka
        kafka:
          enabled: true
          replicaCount: 3
          # 50 MB
          maxMessageBytes: "50000000"
          # 50 MB
          socketRequestMaxBytes: "50000000"
          podSecurityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
          containerSecurityContext:
            runAsUser: 1001
            runAsNonRoot: true

        redis:
          enabled: true
          master:
            persistence:
              enabled: true

        postgresql:
          replication:
            enabled: true
          containerSecurityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false

        rabbitmq:
          containerSecurityContext:
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false

        ## Prometheus Exporter / Metrics
        ##
        metrics:
          enabled: true
          # Enable this if you're using https://github.com/coreos/prometheus-operator
          serviceMonitor:
            enabled: true
            additionalLabels:
              release: prometheus
            scrapeInterval: 30s
  destination:
    server: https://kubernetes.default.svc
    namespace: sentry
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
