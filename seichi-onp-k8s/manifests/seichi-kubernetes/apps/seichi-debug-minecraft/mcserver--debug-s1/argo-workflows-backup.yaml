apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: argo-workflows-backup
  namespace: seichi-debug-minecraft
spec:
  schedule: "0 4 * * *"
  timezone: Asia/Tokyo
  concurrencyPolicy: "Forbid"
  workflowSpec:
    serviceAccountName: mcserver--debug-s1-workflow-sa
    entrypoint: stop-backup-and-boot
    templates:
      - name: stop-backup-and-boot
        steps:
          - - name: patch-statefulset-to-0
              template: patch-statefulset-to-0
          - - name: wait-for-scale-to-0
              template: wait-for-scale-to-0
          - - name: run-backup
              template: run-backup
          - - name: patch-statefulset-to-1
              template: patch-statefulset-to-1
          - - name: wait-for-scale-to-1
              template: wait-for-scale-to-1

      - name: patch-statefulset-to-0
        script:
          image: bitnami/kubectl:1.32.1
          command: ["/bin/sh", "-c"]
          source: |
            kubectl patch statefulset mcserver--debug-s1 -n seichi-debug-minecraft --type='merge' -p '{"spec": {"replicas": 0}}'

      - name: wait-for-scale-to-0
        script:
          image: bitnami/kubectl:1.32.1
          command: ["/bin/sh", "-c"]
          source: |
            echo "Waiting for StatefulSet to scale down..."
            while [ "$(kubectl get statefulset mcserver--debug-s1 -n seichi-debug-minecraft -o jsonpath='{.status.availableReplicas}')" != "0" ]; do
              echo "Still scaling down..."
              sleep 5
            done
            echo "Scale-down confirmed!"

      - name: run-backup
        script:
          image: debian:12
          command: ["/bin/sh", "-c"]
          source: |
            set -e  # エラー時にスクリプトを停止する
            apt update
            apt install -y curl
            echo "Adding Proxmox Backup Client repository..."
            echo "deb http://download.proxmox.com/debian/pbs-client bookworm main" > /etc/apt/sources.list.d/pbs-client.list
            curl -fsSL https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg -o /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg
            echo "Updating package lists..."
            apt update
            echo "Installing proxmox-backup-client version 3.3.2-1..."
            apt install -y proxmox-backup-client=3.3.2-1
            echo "Running backup for /data..."
            proxmox-backup-client backup "${BACKUP_NAME}" \
              --repository "${PBS_USER}@${PBS_HOST}:${PBS_DATASTORE}" \
              --ns mcserver--debug-s1 # proxmox-backup-server側でどのサーバのバックアップかを識別するためにサーバごとに異なるnamespaceを指定する。namespaceはあらかじめproxmox-backup-serverに作成しておく必要がある
          env:
            - name: BACKUP_NAME
              value: "data.pxar:/data"
            - name: PBS_USER
              valueFrom:
                secretKeyRef:
                  name: pbs-credentials
                  key: user
            - name: PBS_HOST
              valueFrom:
                secretKeyRef:
                  name: pbs-credentials
                  key: host
            - name: PBS_DATASTORE
              valueFrom:
                secretKeyRef:
                  name: pbs-credentials
                  key: datastore
            - name: PBS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pbs-credentials
                  key: password
            - name: PBS_FINGERPRINT
              valueFrom:
                secretKeyRef:
                  name: pbs-credentials
                  key: fingerprint
          volumeMounts:
            - name: backup-target-volume
              mountPath: /data

      - name: patch-statefulset-to-1
        script:
          image: bitnami/kubectl:1.32.1
          command: ["/bin/sh", "-c"]
          source: |
            kubectl patch statefulset mcserver--debug-s1 -n seichi-debug-minecraft --type='merge' -p '{"spec": {"replicas": 1}}'

      - name: wait-for-scale-to-1
        script:
          image: bitnami/kubectl:1.32.1
          command: ["/bin/sh", "-c"]
          source: |
            echo "Waiting for StatefulSet to scale up..."
            while [ "$(kubectl get statefulset mcserver--debug-s1 -n seichi-debug-minecraft -o jsonpath='{.status.availableReplicas}')" != "1" ]; do
              echo "Still scaling up..."
              sleep 5
            done
            echo "Scale-up confirmed!"

    volumes:
      - name: backup-target-volume
        persistentVolumeClaim:
          claimName: minecraft-server-data-mcserver--debug-s1-0
