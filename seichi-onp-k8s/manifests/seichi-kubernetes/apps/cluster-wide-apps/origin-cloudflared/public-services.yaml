apiVersion: v1
kind: ConfigMap
metadata:
  name: origin-cloudflared-public-services
  namespace: seichi-minecraft
data:
  tunnel-config.yml: |
    ingress:
      # dynmap-webserver
      # cloudflare-service-tokenによるアクセス制御はしない
      - hostname: s1-map-gigantic.seichi.click
        service: "http://192.168.2.1:80"
      - hostname: s2-map-gigantic.seichi.click
        service: "http://192.168.2.2:80"
      - hostname: s3-map-gigantic.seichi.click
        service: "http://192.168.2.3:80"
      - hostname: s5-map-gigantic.seichi.click
        service: "http://192.168.2.5:80"
      - hostname: s7-map-gigantic.seichi.click
        service: "http://192.168.2.7:80"
      - hostname: cre-map-gigantic.seichi.click
        service: "http://192.168.1.187:80"
      - hostname: h1-map-spring.seichi.click
        service: "http://192.168.1.187:82"

      # redmine-webserver
      # cloudflare-service-tokenによるアクセス制御はしない
      - hostname: redmine.seichi.click
        service: "https://192.168.1.187:3443"
        originRequest:
          noTLSVerify: true
      
      # seichiranking-webserver
      # cloudflare-service-tokenによるアクセス制御はしない
      - hostname: ranking-gigantic.seichi.click
        service: "http://192.168.3.1:80"
      
      - service: http_status:404

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: origin-cloudflared-public-services
  namespace: seichi-minecraft
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: origin-cloudflared-public-services
    appgroup: origin-cloudflared-public-services
    env: cluster-wide
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: origin-cloudflared-public-services
      appgroup: origin-cloudflared-public-services
      env: cluster-wide
  template:
    metadata:
      labels:
        app: origin-cloudflared-public-services
        appgroup: origin-cloudflared-public-services
        env: cluster-wide
    spec:
      containers:
        - name: origin-cloudflared-public-services
          image: "ghcr.io/giganticminecraft/cloudflared-with-auto-dns-route:sha-6455b98"
          env:
            - name: TUNNEL_NAME
              value: "onp-kubernetes-admin-services-tunnel"
            # cloudflared tunnel が実行された時、 cloudflared は Tunnel credential を
            # $TUNNEL_CRED_FILE に書き込む。
            # また、tunnel origin certificate は k8s の Secret によって提供されるため、
            # どこかにread-onlyでマウントする必要がある。
            # そのため、 TUNNEL_ORIGIN_FILE を TUNNEL_ORIGIN_CERT のマウントパス外に
            # 設定する必要がある
            - name: TUNNEL_ORIGIN_CERT
              value: "/root/.cloudflared-origin-cert/cert.pem"
            - name: TUNNEL_CRED_FILE
              value: "/root/.cloudflared/tunnel-cred.json"
          volumeMounts:
            - mountPath: "/root/.cloudflared-origin-cert"
              name: cloudflared-authorization-certificate
            - mountPath: "/etc/cloudflared"
              name: cloudflared-config
          resources:
            requests:
              memory: 32Mi
            limits:
              memory: 64Mi
      volumes:
        - name: cloudflared-authorization-certificate
          secret:
            # このシークレットはクラスタセットアップ作業手順により注入されているべき。
            secretName: cloudflared-tunnel-credential
            items:
              - key: TUNNEL_CREDENTIAL
                path: cert.pem
        - name: cloudflared-config
          configMap:
            name: origin-cloudflared-public-services
