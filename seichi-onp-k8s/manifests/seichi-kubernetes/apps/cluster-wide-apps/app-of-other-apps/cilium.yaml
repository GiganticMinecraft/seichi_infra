apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cilium
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: cilium
    repoURL: https://helm.cilium.io/
    targetRevision: 1.14.5
    helm:
      releaseName: cilium
      values: |
        kubeProxyReplacement: strict
        k8sServiceHost: 192.168.32.100 # modify it if necessary
        k8sServicePort: 8443
        bgpControlPlane:
          enabled: true
        pprof:
          enabled: true
        loadBalancer:
          algorithm: maglev
        encryption:
          nodeEncryption: false
        routingMode: native
        bpf:
          masquerade: true
        ipv4:
          enabled: true
        ipv4NativeRoutingCIDR: "10.96.128.0/18"
        ipv6:
          enabled: false
        ipam:
          mode: cluster-pool
          operator:
            # -- IPv4 CIDR list range to delegate to individual nodes for IPAM.
            clusterPoolIPv4PodCIDRList: ["10.96.128.0/18"]
            # -- IPv4 CIDR mask size to delegate to individual nodes for IPAM.
            clusterPoolIPv4MaskSize: 24
        hubble:
          enabled: false # disable for now
          # tls:
          #   enabled: false # todo: eventually enable tls as it's not a good manner
          #   # auto:
          #   #   enabled: true
          #   #   method: certmanager
          #   #   certManagerIssuerRef:
          #   #     group: cert-manager.io
          #   #     kind: ClusterIssuer
          #   #     name: ca-issuer
          # relay:
          #   enabled: true
          #   rollOutPods: true
          #   podDisruptionBudget:
          #     enabled: true
          #   pprof:
          #     enabled: true
          #   prometheus:
          #     serviceMonitor:
          #       enabled: true
          #       labels:
          #         release: prometheus
          #   tls:
          #     server:
          #       enabled: false
          # ui:
          #   enabled: true
          #   rollOutPods: true
          # metrics:
          #   enabled:
          #     - dns:query;ignoreAAAA
          #     - drop
          #     - tcp
          #     - flow
          #     - icmp
          #     - http
          #     - port-distribution
          #     # - httpV2:exemplars=true;labelsContext=source_ip
          #     - source_namespace
          #     - source_workload
          #     - destination_ip
          #     - destination_namespace
          #     - destination_workload
          #     - traffic_direction
          #   enableOpenMetrics: true
          #   serviceMonitor:
          #     enabled: true
          #     labels:
          #       release: prometheus
          #   dashboards:
          #     enabled: true
          #     namespace: monitoring
        operator:
          prometheus:
            enabled: true
            serviceMonitor:
              enabled: true
              labels:
                release: prometheus
          pprof:
            enabled: true
        prometheus:
          enabled: true
          trustCRDsExist: true
          serviceMonitor:
            enabled: true
            labels:
              release: prometheus
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumLoadBalancerIPPool
metadata:
  name: "lb-pool"
spec:
  cidrs:
  # 10.96.0.0-10.96.3.255 をloadBalancerのIPに割当可能
  - cidr: "10.96.0.0/22"
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-cp-1
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-cp-1
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
    
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-cp-2
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-cp-2
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-cp-3
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-cp-3
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-wk-1
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-wk-1
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-wk-2
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-wk-2
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
  name: peerpolicy--seichi-onp-k8s-wk-3
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: seichi-onp-k8s-wk-3
  virtualRouters:
  - localASN: 65184
    exportPodCIDR: true
    # 全てのServiceIPとLoadBalancerIPを広報するためのおまじない的なserviceSelector
    # https://docs.cilium.io/en/stable/network/bgp-control-plane/#service-announcements
    serviceSelector:
      matchExpressions:
         - {key: somekey, operator: NotIn, values: ['never-used-value']}
    neighbors:
    - peerAddress: "192.168.3.254/32"
      peerASN: 65184
      eBGPMultihopTTL: 10
      connectRetryTimeSeconds: 120
      holdTimeSeconds: 90
      keepAliveTimeSeconds: 30
      gracefulRestart:
        enabled: true
        restartTimeSeconds: 120
---
