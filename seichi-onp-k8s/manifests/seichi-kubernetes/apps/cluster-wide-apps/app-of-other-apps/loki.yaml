apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io # cascade deletion on this App deletion
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: cluster-wide-apps
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.31.0
    helm:
      values: |
        loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          schemaConfig:
            configs:
              - from: "2024-04-01"
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          pattern_ingester:
              enabled: true
          limits_config:
            allow_structured_metadata: true
            volume_enabled: true
            ingestion_rate_mb: 8
            ingestion_burst_size_mb: 16
          ruler:
            enable_api: true

        minio:
          enabled: true
          persistence:
            size: 50Gi

        deploymentMode: SingleBinary

        singleBinary:
          replicas: 1
          persistence:
            size: 50Gi

        # Zero out replica counts of other deployment modes
        backend:
          replicas: 0
        read:
          replicas: 0
        write:
          replicas: 0

        ingester:
          replicas: 0
        querier:
          replicas: 0
        queryFrontend:
          replicas: 0
        queryScheduler:
          replicas: 0
        distributor:
          replicas: 0
        compactor:
          replicas: 0
        indexGateway:
          replicas: 0
        bloomCompactor:
          replicas: 0
        bloomGateway:
          replicas: 0

        # -- DEPRECATED Monitoring section determines which monitoring features to enable, this section is being replaced
        # by https://github.com/grafana/meta-monitoring-chart
        monitoring:
          # -- DEPRECATED Recording rules for monitoring Loki, required for some dashboards
          rules:
            enabled: true
            labels:
              release: prometheus
            additionalRuleLabels:
              release: prometheus
            additionalGroups:
            - name: additional-loki-rules
              rules:
                - record: job:loki_request_duration_seconds_bucket:sum_rate
                  expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
                - record: job_route:loki_request_duration_seconds_bucket:sum_rate
                  expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
                - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
                  expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
          #  -- DEPRECATED ServiceMonitor configuration
          serviceMonitor:
            enabled: true
            labels:
              release: prometheus
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      name: loki
      namespace: monitoring
      jsonPointers:
        - /spec/volumeClaimTemplates
