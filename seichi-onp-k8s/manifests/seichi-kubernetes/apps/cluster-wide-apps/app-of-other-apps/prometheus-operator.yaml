apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io # cascade deletion on this App deletion
spec:
  project: cluster-wide-apps
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 69.7.3
    helm:
      releaseName: prometheus
      skipCrds: true
      values: |
        crds:
          enabled: true
          upgradeJob:
            enabled: true
        defaultRules:
          create: true
          rules:
            kubeProxy: false
            alertmanager: false
            windows: false
        prometheus-windows-exporter:
          prometheus:
            monitor:
              enabled: false
        kubelet:
          serviceMonitor:
            attachMetadata:
              node: true
        nodeExporter:
          operatingSystems:
            darwin:
              enabled: false
        loki:
          isDefault: false
        grafana:
          sidecar:
            datasources:
              enabled: false
              defaultDatasourceEnabled: false
              isDefaultDatasource: false
          defaultDashboardsTimezone: Asia/Tokyo
          plugins:
            - grafana-piechart-panel
            - isovalent-hubble-datasource
            - grafana-sentry-datasource
          grafana.ini:
            log:
              level: warn
            server:
              enforce_domain: true
              domain: grafana.onp-k8s.admin.seichi.click
              root_url: https://%(domain)s/
            date_formats:
              default_timezone: Asia/Tokyo
            auth:
              disable_login_form: true
            auth.github:
              enabled: true
              allow_sign_up: true
              auto_login: true
              client_id: $__env{GF_AUTH_GITHUB_CLIENT_ID}
              client_secret: $__env{GF_AUTH_GITHUB_CLIENT_SECRET}
              scopes: user:email,read:org
              auth_url: https://github.com/login/oauth/authorize
              token_url: https://github.com/login/oauth/access_token
              api_url: https://api.github.com/user
              allowed_organizations: GiganticMinecraft
              allow_assign_grafana_admin: true
              role_attribute_path: contains(groups[*], '@GiganticMinecraft/onp-admin-proxmox') && 'GrafanaAdmin' || 'Viewer'
            security:
              cookie_secure: true
              strict_transport_security: true
              content_security_policy: true
            users:
              viewers_can_edit: true
          deploymentStrategy:
            type: Recreate
          envValueFrom:
            MARIADB_MONITORING_PASSWORD:
              secretKeyRef:
                name: mariadb-monitoring-password
                key: monitoring-password
          envFromSecret: "grafana-github-oauth-app-secret"
          persistence:
            enabled: true
            size: 10Gi
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  url: http://prometheus-kube-prometheus-prometheus:9090
                  isDefault: true
                - name: Loki
                  type: loki
                  url: http://loki:3100
                  isDefault: false
                - name: MariaDB
                  type: mysql
                  url: mariadb.seichi-minecraft:3306
                  isDefault: false
                  user: monitoring
                  secureJsonData:
                    password: ${MARIADB_MONITORING_PASSWORD}
        prometheus:
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  resources:
                    requests:
                      storage: 150Gi
            resources:
              requests:
                memory: 2Gi
            retention: 60d
        alertmanager:
          enabled: false
        kubeProxy:
          enabled: false
        kubeEtcd:
          endpoints:
            - 192.168.32.11
            - 192.168.32.12
            - 192.168.32.13
          service:
            enabled: true
            port: 2381
            targetPort: 2381
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
