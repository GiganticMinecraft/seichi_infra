apiVersion: v1
kind: ConfigMap
metadata:
  name: common-mcserver-plugin-configs
data:
  DiscordSRV-config.yml: |
    # DiscordSRV設定
    # 助けが必要？ Discord、https：//discordsrv.com/discordに参加してください

    # ここは変更しないでください
    ConfigVersion: 1.24.0

    # Bot token: 取得したトークンはここに設定してください。設定方法は、プラグインの導入手順を参照してください。
    # このオプションを変更した後、サーバーを再起動する必要があります
    BotToken: "${CFG_DISCORDSRV_TOKEN}"

    # ゲームからDiscordへのチャンネルリンク
    # 構文は Channels: {"Minecraftからのゲーム内チャネル名": "Discordからの数値チャネルID", "Minecraftからの別のゲーム内チャネル名": "Discordからの別の数値チャネルID"}
    #
    # DiscordSRVのメッセージはすべて、そのタイプのメッセージのチャネルが定義されていない限り、最初のチャネルに送られます。
    # 互換性のあるチャットプラグインを使用する場合、チャネル名はそのプラグインのものになります（チャットメッセージ用）
    #  - TownyChatを使用している場合、デフォルトのチャネルは通常"global"ではなく"general"と呼ばれます
    # プレーヤーのチャットメッセージの場合（チャットプラグインを使用していない場合）: global
    # サーバーの開始/停止メッセージ用: status
    # アチーブメント/アドバンスメッセージ: awards
    # 死のメッセージ: deaths
    # 参加メッセージの場合: join
    # メッセージを残す場合: leave
    # dynmapメッセージの場合：dynmap
    # ウォッチドッグメッセージの場合: watchdog
    # / discordブロードキャストの場合: broadcasts （コマンドで指定されていない場合）
    #
    # チャンネルペアの最初の部分はDiscordチャンネル名ではありません！
    # このオプションを変更した後、サーバーを再起動する必要があります
    Channels: {"global": "${CFG_DISCORDSRV_GLOBAL_CHANNEL_ID}"}

    # コンソールチャンネルの数値のID(チャンネル名ではありません)。コンソールチャンネルを全て無効にするなら、空のままにしてください。
    DiscordConsoleChannelId: "${CFG_DISCORDSRV_CONSOLE_CHANNEL_ID}"

    # /discordの使用時にプレーヤーに表示される招待リンク、およびリンクが強制されるときにリンクされていないプレーヤーに表示されるメッセージに表示される招待リンク
    DiscordInviteLink: "discord.gg/changethisintheconfig.yml"

    # デバッグ情報
    # 問題を見つけようとしない限り、これらを有効にしないでください。
    #
    # 利用可能なデバッグカテゴリ：
    # MINECRAFT_TO_DISCORD  - Minecraftからのメッセージ
    # DISCORD_TO_MINECRAFT  - Discordからのメッセージ
    # GROUP_SYNC            - グループの同期
    # PRESENCE              - ボットのゲームステータスまたは存在
    # VOICE                 - 音声モジュール（voice.ymlを参照）
    # REQUIRE_LINK          - モジュールに参加するにはリンクが必要です（linking.ymlを参照）
    # NICKNAME_SYNC         - ニックネームの同期
    # ALERTS                - アラート (alerts.ymlを参照)
    # WATCHDOG              - Server ウォッチドッグ
    # BAN_SYNCHRONIZATION   - BAN同期
    # LP_CONTEXTS           - LuckPermのコンテキスト
    # ACCOUNT_LINKING       - 不和/Minecraftアカウントのリンク
    #
    # UNCATEGORIZED         - 上記のいずれにも該当しないもの
    # ALL                   - 上記のすべてのカテゴリ（UNCATEGORIZEDを含む）
    #
    # JDA                   - JDAのデバッグメッセージ
    # JDA_REST_ACTIONS      - JDAの残りのアクションのデバッグ用
    # CALLSTACKS            - DiscordSRVデバッグ呼び出しのスタックトレースを表示します
    #
    # 例: "Debug: [GROUP_SYNC, PRESENCE]"
    #
    Debug: []

    # Legacy option for transitioning to the new Debug option,
    # setting this to anything above 1 is the same as setting Debug to [ALL]
    DebugLevel: 0

    # 実験
    # これらの機能は完全に最適化されていません。 自己責任

    # JDBC (MySQL/MariaDB)
    Experiment_JdbcAccountLinkBackend: "jdbc:mysql://HOST:PORT/DATABASE?autoReconnect=true&useSSL=false"
    Experiment_JdbcTablePrefix: "discordsrv"
    Experiment_JdbcUsername: "username"
    Experiment_JdbcPassword: "password"

    # Webhook配信
    Experiment_WebhookChatMessageDelivery: false
    Experiment_WebhookChatMessageUsernameFormat: "%displayname%"
    Experiment_WebhookChatMessageFormat: "%message%"
    Experiment_WebhookChatMessageUsernameFromDiscord: false
    Experiment_WebhookChatMessageAvatarFromDiscord: false

    # 埋め込みとWebhookの画像/アバターのURL形式
    # オフラインサーバー用の代替埋め込みアバターURL：
    # https://cravatar.eu/helmavatar/{username}/{size}.png#{texture}
    AvatarUrl: https://crafatar.com/avatars/{uuid-nodashes}.png?size={size}&overlay#{texture}

    # Reserializer
    # MinecraftとDiscord間の書式設定（太字、斜体、下線）を変換する
    Experiment_MCDiscordReserializer_ToDiscord: false
    Experiment_MCDiscordReserializer_ToMinecraft: false
    Experiment_MCDiscordReserializer_InBroadcast: false

    # その他
    CancelConsoleCommandIfLoggingFailed: true
    ForcedLanguage: none
    PrintGuildsAndChannels: true
    ForceTLSv12: true
    NoopHostnameVerifier: false
    MaximumAttemptsForSystemDNSBeforeUsingFallbackDNS: 3
    TimestampFormat: EEE, d. MMM yyyy HH:mm:ss z
    DateFormat: yyyy-MM-dd
    # https://github.com/DiscordSRV/DiscordSRV/wiki/config#Timezone
    Timezone: default

    # プラグインフック
    # これらのオプションを変更した後、サーバーを再起動する必要があります
    #
    # DisabledPluginHooks: 無効化されたプラグインフック（通常はプラグインの名前だけ.
    # VentureChatBungee: VentureChatフックのBungeeCord機能を有効にします（メッセージはすべてのサーバーから受信され、少なくとも1人のプレーヤーがオンラインである必要があります）
    # EnablePresenceInformation: enabled presence information, which is required for some of our PlaceholderAPI placeholders. Keep in mind this requires the "Presence Intent" from the Discord developer portal
    # UseModernPaperChatEvent: only use this if you have a chat plugins that SPECIFICALLY utilizes Paper's "AsyncChatEvent"
    DisabledPluginHooks: ['LunaChat']
    VentureChatBungee: false
    EnablePresenceInformation: false
    UseModernPaperChatEvent: false

    # Game Information
    # Sets the "Playing: ______" indicator for the bot.
    # Can be a single, static value, or cycle through multiple different options
    # You can preface the status with "playing", "watching", or "listening to" to set the activity type
    # PlaceholderAPI placeholders are supported
    #
    # DiscordGameStatus: Text to display. Can be a single value e.g. "Minecraft", or multiple values e.g. ["Minecraft", "yourip.changeme.com"]
    # StatusUpdateRateInMinutes: How frequently to cycle the status
    DiscordGameStatus: "playing Minecraft"
    StatusUpdateRateInMinutes: 2

    # チャットチャンネル情報
    # チャットチャンネルは、DiscordのテキストチャンネルとMinecraftのゲーム内チャットを紐づけたチャンネルです。
    # DiscordのチャットとMinecraftのチャットを、相互に転送することができます。
    #
    # DiscordChatChannelDiscordToMinecraft: Discordのテキストチャンネルのメッセージをゲーム内チャットに送信するかどうか
    # DiscordChatChannelMinecraftToDiscord: ゲーム内チャットのメッセージをDiscordのテキストチャンネルに送信するかどうか
    # DiscordChatChannelTruncateLength: DiscordからMinecraftに送信されるメッセージの最大長
    # DiscordChatChannelTranslateMentions: @Person for Minecraftのような言い回しをDiscordメッセージに翻訳するかどうか
    # DiscordChatChannelAllowedMentions: Minecraft toDiscordメッセージで許可されている言及の種類。 デフォルト値にないタイプ は、「role」、「here」、および「everyone」です。
    # DiscordChatChannelEmojiBehavior: どのように絵文字をMinecraftに送信するかを指定します。"show"、"name"、"hide"のいずれかです。
    # DiscordChatChannelEmoteBehavior: Minecraftへのエモートの送信方法。"name"または "hide"を指定できます。
    # DiscordChatChannelPrefixRequiredToProcessMessage: チャットの頭に付けると、MinecraftからDiscordに送信されるようにすることができるプレフィックス（例： "!"）。
    # DiscordChatChannelRolesAllowedToUseColorCodesInChat: DiscordからMinecraftに送る時に、カラー/フォーマットコードを使用できるロールのリスト
    # DiscordChatChannelBroadcastDiscordMessagesToConsole: Discordから送信されたメッセージをコンソールに出力するかどうか
    # DiscordChatChannelBlockBots: ボットをDiscordからブロックする必要があるかどうか - > MCチャット
    # DiscordChatChannelRequireLinkedAccount: プレイヤーに自分のDiscordアカウントをMinecraftにリンクさせて、Discordメッセー ジをMinecraftに送るように要求するかどうか
    # DiscordChatChannelBlockedIds: メッセージをブロックする、Discordユーザー（あるいはBot）のIDリスト
    # DiscordChatChannelRolesSelectionAsWhitelist：次のリストをホワイトリスト（true）またはブラックリスト（false）として扱う場合
    # DiscordChatChannelRolesSelection：すべてのユーザーの役割から除外する必要がある役割のリスト
    # DiscordChatChannelRoleAliases: ロールエイリアスのリスト（Minecraftメッセージで使用するロールの代替名）
    #
    DiscordChatChannelDiscordToMinecraft: true
    DiscordChatChannelMinecraftToDiscord: true
    DiscordChatChannelTruncateLength: 256
    DiscordChatChannelTranslateMentions: true
    DiscordChatChannelAllowedMentions: [user, channel, emote]
    DiscordChatChannelEmojiBehavior: "name"
    DiscordChatChannelEmoteBehavior: "name"
    DiscordChatChannelPrefixRequiredToProcessMessage: ""
    DiscordChatChannelRolesAllowedToUseColorCodesInChat: ["運営チーム"]
    DiscordChatChannelBroadcastDiscordMessagesToConsole: true
    DiscordChatChannelRequireLinkedAccount: false
    DiscordChatChannelBlockBots: false
    DiscordChatChannelBlockedIds: ["000000000000000000", "000000000000000000", "000000000000000000"]
    DiscordChatChannelRolesSelectionAsWhitelist: false
    DiscordChatChannelRolesSelection: ["Don't show me!", "Misc role"]
    DiscordChatChannelRoleAliases: {"Developer": "Dev"}

    # コンソールチャンネル情報
    # コンソールチャンネルは、DiscordのテキストチャンネルとMinecraftのサーバーコンソールを紐づけたチャンネルです。
    # Discordのテキストチャンネルからコンソールにコマンドを送ったり、コンソールの出力内容をDiscordで見たりすることができます。
    #
    # messages.yml（タイムスタンプの削除を含む）でコンソールメッセージをカスタマイズすることができます。
    #
    # DiscordConsoleChannelLogRefreshRateInSeconds: コンソールの表示内容を送信する間隔（秒単位）
    # DiscordConsoleChannelUsageLog:
    #    %date%:   現在の日付
    #              例: 2017-01-01
    #    PlaceholderAPIプレースホルダーがサポートされています
    # DiscordConsoleChannelBlacklistActsAsWhitelist: "DiscordConsoleChannelBlacklistedCommands"設定を、ブラックリストの代わ りにホワイトリストとして動作させるかどうか
    # DiscordConsoleChannelBlacklistedCommands: Discordのユーザーがコンソールにコマンドとして送信できないようにするブラック リスト
    # DiscordConsoleChannelBlacklistedCommands: phrases wrapped in quotation marks that users should not be able to send as commands to the console
    # DiscordConsoleChannelFilters: Discordに送信されるコンソール回線に適用される正規表現フィルター。結果が空の場合、メッセ ージはまったく送信されません。
    # DiscordConsoleChannelLevels: アペンダーを介してコンソールチャネルに送信するログレベル
    # DiscordConsoleChannelAllowPluginUpload: プラグインをコンソールチャネルにアップロードすると、プラグインがサーバーに自動的に追加されます。
    #
    DiscordConsoleChannelLogRefreshRateInSeconds: 5
    DiscordConsoleChannelUsageLog: "DiscordConsole.log"
    DiscordConsoleChannelBlacklistActsAsWhitelist: false
    DiscordConsoleChannelBlacklistedCommands: ["?", "op", "deop", "execute"]
    DiscordConsoleChannelFilters: {".*(?i)async chat thread.*": "", ".*There are \\d+ (?:of a max of|out of maximum) \\d+ players online.*": ""}
    DiscordConsoleChannelLevels: [info, warn, error]
    DiscordConsoleChannelAllowPluginUpload: false

    # チャットチャンネルコマンド実行コマンド
    # 登録されたチャットチャンネルから、Prefixを付けてコマンドを書くと、コンソールコマンドを実行させることができます。
    # 例えば、"!c kick Notch" のように発言すると、コンソールで "kick Notch" コマンドを実行することができます。
    #
    # DiscordChatChannelConsoleCommandEnabled: チャットチャネルからのコンソールコマンドを許可するかどうか
    # DiscordChatChannelConsoleCommandNotifyErrors: 権限のないユーザーがコマンドを実行したときに、権限が無いことを通知するかどうか
    # DiscordChatChannelConsoleCommandPrefix: コンソールコマンドに使用するPrefix。例: "!c tps"
    # DiscordChatChannelConsoleCommandRolesAllowed: チャットチャネルからサーバーコマンドの実行を許可するロール
    # DiscordChatChannelConsoleCommandWhitelist: DiscordChatChannelConsoleCommandPrefixで実行可能なコマンドのリスト
    # DiscordChatChannelConsoleCommandWhitelistBypassRoles: Whitelistに関係なくコマンドを実行することを許可するロールのリス ト
    # DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: "DiscordChatChannelConsoleCommandWhitelist"設定を、ホワイト リストの代わりにブラックリストとして動作させるかどうか
    # DiscordChatChannelConsoleCommandExpiration: 送信されたコマンド出力がボットによって自動的に削除されるまでの時間（秒）。有効期限を無効にするには0に設定します。
    # DiscordChatChannelConsoleCommandExpirationDeleteRequest: コマンドを発行した人のメッセージを削除するかどうか
    #
    DiscordChatChannelConsoleCommandEnabled: true
    DiscordChatChannelConsoleCommandNotifyErrors: true
    DiscordChatChannelConsoleCommandPrefix: "!c"
    DiscordChatChannelConsoleCommandRolesAllowed: ["運営チーム"]
    DiscordChatChannelConsoleCommandWhitelist: ["say", "lag", "tps"]
    DiscordChatChannelConsoleCommandWhitelistBypassRoles: ["運営チーム"]
    DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: false
    DiscordChatChannelConsoleCommandExpiration: 0
    DiscordChatChannelConsoleCommandExpirationDeleteRequest: true

    # チャットチャンネルプレイヤーリストコマンド
    # playerlistコマンドの設定内容
    #
    # DiscordChatChannelListCommandEnabled: コマンドを有効にするかどうか
    # DiscordChatChannelListCommandMessage: プレイヤーリストのコマンド
    # DiscordChatChannelListCommandExpiration: 送信されたプレーヤーのリストメッセージがボットによって自動的に削除されるまで の時間（秒）。有効期限を無効にするには0に設定します。
    # DiscordChatChannelListCommandExpirationDeleteRequest: プレイヤーリストを要求した人のメッセージを削除するかどうか
    #
    DiscordChatChannelListCommandEnabled: true
    DiscordChatChannelListCommandMessage: "playerlist"
    DiscordChatChannelListCommandExpiration: 10
    DiscordChatChannelListCommandExpirationDeleteRequest: true

    # チャットチャンネル ブラックリストのフレーズと正規表現
    #
    # DiscordChatChannelGameFilters: Discordに送信されるチャットメッセージに適用される正規表現フィルター。結果が空の場合、メッセージはまったく送信されません。
    # DiscordChatChannelDiscordFilters: Minecraftに送信されるチャットメッセージに適用される正規表現フィルター。結果が空の場 合、メッセージはまったく送信されません。
    #
    DiscordChatChannelGameFilters: {}
    DiscordChatChannelDiscordFilters: {".*Online players\\(.*": "", ".*\\*\\*No online players\\*\\*.*": ""}

    # チャンネルトピック設定
    #
    # ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: サーバーのシャットダウン時にチャンネルのトピックを変更する必要があ るかどうか
    # ChannelTopicUpdaterRateInMinutes: チャンネルのトピックを自動的に更新する間隔（分）
    #
    ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: true
    ChannelTopicUpdaterRateInMinutes: 5

    # Discord 定型文応答
    # これらは、定型文を返信するための設定です。
    # おそらく、デフォルトから変更するか、独自のものを追加するべきです。
    #
    # 書き方は、  {"トリガー": "応答", "トリガー": "応答", ...}
    # 定型文の応答を必要としない場合は、{} に設定してください。
    # PlaceholderAPIプレースホルダがサポートされています
    #
    DiscordCannedResponses: {"!ip": "yourserveripchange.me", "!site": "http://yoursiteurl.net"}

    # Minecraft から Discord へのアカウントリンク
    # これらは、MinecraftアカウントをDiscordアカウントにリンクする機能に関する設定オプションです
    #
    # MinecraftDiscordAccountLinkedConsoleCommands: アカウントがリンクされているときに実行するコマンド。使用可能なキーワードについては以下を参照してください。
    # MinecraftDiscordAccountUnlinkedConsoleCommands: アカウントのリンクが解除されたときに実行されるコマンド。可能なプレースホルダについては以下を参照してください。
    # %minecraftplayername%: Minecraftのプレイヤー名
    #                         例: Notch
    # %minecraftuuid%:       プレイヤーのUUID
    #                         例: you know what a uuid looks like
    # %discordid%:           リンクされたDiscordのアカウントID
    #                         例: 12345678901234567890
    # %discordname%:         リンクされたDiscordのアカウント名
    #                         例: Notch
    #
    # MinecraftDiscordAccountLinkedRoleNameToAddUserTo: Discordユーザーが自分のアカウントをリンクするときに追加するDiscordロール名
    # MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: 新しいコードをボットに送信して新しいコードとのリンクを解除 して再リンクすることを許可する
    #
    MinecraftDiscordAccountLinkedConsoleCommands: ["", "", ""]
    MinecraftDiscordAccountUnlinkedConsoleCommands: ["", "", ""]
    MinecraftDiscordAccountLinkedRoleNameToAddUserTo: "Linked"
    MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: false

    # Server ウォッチドッグ
    #
    # ウォッチドッグは、サーバがゲームチックを実行した最後の時間を常に監視します
    # 最後のtick以降の時間が設定された間隔（秒）を超えると、Discordメッセージがトリガーされます
    # サーバーが重くなっていることを通知するために使用してください
    #
    # ServerWatchdogEnabled: ウォッチドッグを有効にするかどうか
    # ServerWatchdogTimeout: ウォッチドッグが動作するまでに経過する必要のある秒数（Spigotのクラッシュ検出では、60秒が使用さ れています）
    #                        この設定の最小値は10秒です。
    # ServerWatchdogMessageCount: ServerWatchdogMessageが送信される回数。
    #
    ServerWatchdogEnabled: true
    ServerWatchdogTimeout: 60
    ServerWatchdogMessageCount: 3

  # Original from
  # https://github.com/DiscordSRV/DiscordSRV/blob/339e5e81da67cfe6210679af775eb66a9b5033be/src/main/resources/messages/ja.yml
  DiscordSRV-messages.yml: |
    # Discord -> Minecraft メッセージ
    #
    # DiscordToMinecraftChatMessageFormat: DiscordからMinecraftにメッセージを送る時に適用されるフォーマット
    # DiscordToMinecraftChatMessageFormatNoRole: ロールを持たないユーザーがDiscordからMinecraftにメッセージを送る時に適用されるフォーマット
    #
    # チャンネルごとに異なるフォーマットを指定できます。 「mychannel」という名前のチャンネルがあるとします。
    # グローバルに定義されたもの以外のフォーマットにしたい場合は、次のプロパティを追加できます。
    #
    # DiscordToMinecraftChatMessageFormat_mychannel: "[&bDiscord From MyChannel &r| %toprolecolor%%toprole%&r] %name% » %message%"
    # DiscordToMinecraftChatMessageFormatNoRole_mychannel: "[&bDiscord From MyChannel&r] %name% » %message%"
    #
    # 使用できるキーワード:
    # %allroles%:       発言した人が持っている全てのロール。DiscordToMinecraftAllRolesSeparatorで指定される記号で繋げられて表示されます
    #                    例: Owner | Developer | Boss man
    # %message%:        メッセージ内容
    #                    例: Hello!
    # %toprole%:        発言した人が持っている一番権限の高いロール
    #                    例: Owner
    # %toprolealias%:   DiscordChatChannelRoleAliasesからのロールのエイリアス、それ以外の場合はロールの名前
    #                    例: Dev
    # %toproleinitial%: 人の最高ランクの役割の最初の文字
    #                    example: O
    # %toprolecolor%:   発言した人が持っている一番権限の高いロールに紐付いている色。
    #                    例: &4
    # %name%:           Discordでの個人の実効名（存在する場合はニックネーム、それ以外の場合はユーザー名）
    #                    例: NotchIsMe
    # %username%:       Discordでの名前。
    #                    例: Notch
    # %channelname%:    メッセージが来るチャンネルの名前
    #                    例: server-chat
    # %reply%:          メッセージが別のメッセージへの返信である場合に表示されるメッセージ。
    #                    メッセージ形式は、DiscordToMinecraftMessageReplyFormatで構成できます。
    #                    メッセージが別のメッセージへの返信でない場合、これは空になります
    #
    # DiscordToMinecraftAllRolesSeparator: %allroles% で利用されるセパレータ
    #
    # DiscordToMinecraftMessageReplyFormat：メッセージが返信であることを示すために表示されるメッセージの形式
    #
    # 利用可能なプレースホルダー:
    # %name%:           Discordで返信されるユーザーの有効な名前（存在する場合はニックネーム、存在しない場合はユーザー名）
    #                    例:NotchIsMe
    # %username%:       Discordで返信されているユーザーのユーザー名
    #                    例:ノッチ
    # %message%: 返信されるメッセージの内容
    #
    # 注: DiscordToMinecraftMessageReplyFormatをメッセージに表示する場合は、%reply%プレースホルダーがフォーマットで存在する必要があります。
    #
    DiscordToMinecraftChatMessageFormat: "[<aqua>Discord</aqua> | %toprolecolor%%toprolealias%<reset>] %name%%reply% » %message%"
    DiscordToMinecraftChatMessageFormatNoRole: "[<aqua>Discord</aqua>] %name%%reply% » %message%"
    DiscordToMinecraftAllRolesSeparator: " | "
    DiscordToMinecraftMessageReplyFormat: " (に返信する %name%)"

    # Minecraft -> Discord メッセージ
    #
    # MinecraftChatToDiscordMessageFormat: MinecraftからDiscordにメッセージを送る時に適用されるフォーマット
    # MinecraftChatToDiscordMessageFormatNoPrimaryGroup: プレイヤーのプライマリグループが見つからなかった場合に
    #                                                    MinecraftChatToDiscordMessageFormatの代わりに使用されるフォーマット
    #
    # 使用できるキーワード:
    # %username%:     プレイヤー名
    #                  例: jeb_
    # %displayname%:  プレイヤーの表示名
    #                  例: BigBossManJeb
    # %usernamenoescapes%:     不和の形式をエスケープしなプレイヤー名（インラインコードとコードブロックマークダウンで使用）
    #                  example: jeb_
    # %displaynamenoescapes%:  不和の形式をエスケープしなプレイヤーの表示名（インラインコードとコードブロックマークダウンで使用）
    #                  example: BigBossManJeb
    # %message%:      メッセージ内容
    #                  例: Hello!
    # %primarygroup%: プレイヤーのプライマリグループ名
    # %world%:        プレイヤーが発言した時に居たワールド名
    #                  例: world
    # %worldalias%:   プレイヤーが発言した時に居たワールドの、Multiverse-Coreに設定されているエイリアス名
    #                  例: Mainland
    # %date%:         現在の日付と時間
    #                  例: Sun Jan 1 15:30:45 PDT 2017
    # %channelname%:  メッセージがチャットチャネルから送信されている場合、メッセージが送信されたチャネルの名前。
    #                  例: Global
    # PlaceholderAPIプレースホルダもサポートされています
    #
    MinecraftChatToDiscordMessageFormat: "**%primarygroup%** %displayname% » %message%"
    MinecraftChatToDiscordMessageFormatNoPrimaryGroup: "%displayname% » %message%"

    # チャットチャンネルのプラグインメッセージ
    # これは、サポートされているチャットチャンネルプラグインがフックされている場合にのみ使用される特別なメッセージです。
    # ゲーム内のメッセージに、チャンネル固有の情報を付与することができます。
    #
    # 使用できるキーワード:
    # %channelcolor%:    チャンネルに設定されているカラーコード
    #                     例: &4
    # %channelname%:     チャンネル名。通常は、サーバーの内部IDになります
    #                     例: staff
    # %channelnickname%: チャンネルのニックネーム。通常は、プレイヤーが表示名として見ることができる名前になります
    #                     例: Staff
    # %message%:         DiscordToMinecraftChatMessageFormat / DiscordToMinecraftChatMessageFormatNoRole が適用された結果のメッセージ内容。
    #                     例: jeb_ > サーバーからこんにちは！
    #
    ChatChannelHookMessageFormat: "%channelcolor%[%channelnickname%]&r %message%"

    # Dynmapメッセージ
    #
    # DynmapNameFormat: Dynmapに送信されるメッセージのユーザー名部分の形式（これは、dynmap設定によっては非表示になる場合があります）
    # DynmapChatFormat: Dynmapに送信されるメッセージのメッセージ部分のフォーマット
    #
    # 使用できるキーワード:
    # Discordと同じ-> Minecraftプレースホルダー
    #
    # DynmapDiscordFormat: Discordに送られるDynmapメッセージのフォーマット
    #
    # 使用できるキーワード:
    # %message%:  メッセージ内容
    #              例: Hello!
    # %name%:     Dynmap Webチャットで送信されたメッセージのユーザー名（空白にすることもできます）
    #              例: Notch
    # PlaceholderAPIプレースホルダもサポートされています
    #
    DynmapNameFormat: "[Discord | %toprolealias%] %username%"
    DynmapChatFormat: "%message%"
    DynmapDiscordFormat: "[Dynmap] %name% » %message%"

    # Discord コンソールチャンネルメッセージ設定
    # コンソールチャンネルが有効なら、コンソールからコンソールチャンネルに送信される時に適用されるフォーマット設定です。
    #
    # 使用できるキーワード:
    # {level}:    メッセージの重要度レベル
    #              例: INFO, WARN, ERROR
    # {name}:     ロガー名
    #              例: Server
    # {datetime}: 現在の日付と時間
    #              例: Sun 15:30:45
    # PlaceholderAPIプレースホルダもサポートされています
    #
    # DiscordConsoleChannelPrefix: 行の前に追加するプレフィックス。
    # DiscordConsoleChannelSuffix: 行の後に追加するサフィックス。
    #
    DiscordConsoleChannelTimestampFormat: "EEE HH:mm:ss"
    DiscordConsoleChannelPrefix: "[{date} {level}{name}] "
    DiscordConsoleChannelSuffix: ""
    DiscordConsoleChannelPadding: 0

    # Discordチャットチャンネル !c コマンドエラーメッセージ
    # コマンド自体を実行する際のエラーではなく、プレーヤーがコマンドを実行するためのアクセス許可でエラーが発生した場合に使用されます
    # これはPMとしてユーザーに送信されます
    #
    # 使用できるキーワード:
    # %user%:  コマンドを実行しようとしたユーザーの名前
    #           例: Notch
    # %error%: エラーの理由
    #           例: no permission
    #
    DiscordChatChannelConsoleCommandNotifyErrorsFormat: "**%user%** さんが実行したコマンドは、エラーになりました: %error%"

    # Discordチャットチャンネル playerlist コマンド
    # 誰かがチャットチャンネルでplayerlistコマンドを実行したときに使用されるメッセージ
    #
    # DiscordChatChannelListCommandFormatOnlinePlayers: リストの先頭に表示されるメッセージ
    # DiscordChatChannelListCommandFormatNoOnlinePlayers: オンラインのプレイヤーが誰もいないときに使用されるメッセージ
    # DiscordChatChannelListCommandPlayerFormat: 各プレーヤーがリストに表示される方法の形式
    #   使用できるキーワード:
    #   %username%:     プレイヤー名
    #   %displayname%:  プレイヤーの表示名
    #   %primarygroup%: プレイヤーのプライマリグループ名
    #   %world%:        プレイヤーが発言した時に居たワールド名
    #   %worldalias%:   プレイヤーが発言した時に居たワールドの、Multiverse-Coreに設定されているエイリアス名
    #   PlaceholderAPIプレースホルダもサポートされています
    # DiscordChatChannelListCommandAllPlayersSeparator: プレーヤー間で使用されるセパレータ
    #
    DiscordChatChannelListCommandFormatOnlinePlayers: "**オンラインプレイヤー数 (%playercount%):**"
    DiscordChatChannelListCommandFormatNoOnlinePlayers: "**オンラインのプレイヤーはいません**"
    DiscordChatChannelListCommandPlayerFormat: "%displayname%"
    DiscordChatChannelListCommandAllPlayersSeparator: ", "

    # Minecraft -> Discord 通知メッセージ
    #
    #
    # 情報を埋め込む:
    # Color:      16進数の色コードを受け入れます (例 "#ffffff") またはRGB整数 (例 0)
    # Fields:     フォーマットは "題名;値;inline" (例 "誰が参加しましたか？;%displayname%;true") または"Blank"で空白のフィールドを追加します
    # Timestamp:  メッセージが送信された時間を使用するか、特定の時間のエポックタイムスタンプを使用するには、trueに設定します (https://www.epochconverter.com/)
    #
    # PlayerJoin/PlayerFirstJoin/PlayerLeave/PlayerDeath/PlayerAchievementで使用可能なプレースホルダー:
    # %displayname%:         プレイヤーの表示名
    # %username%:            プレイヤー名
    # %displaynamenoescapes%:  不和の形式をエスケープしなプレイヤーの表示名（インラインコードとコードブロックマークダウンで使用）
    # %usernamenoescapes%:     不和の形式をエスケープしなプレイヤー名（インラインコードとコードブロックマークダウンで使用）
    # %date%:                現在の日付と時間
    # %embedavatarurl%:      ユーザーのアバター
    # %botavatarurl%:        ボットのアバター
    # %botname%:             ボットの名前
    # PlaceholderAPIプレースホルダもサポートされています
    #
    # PlayerJoinで使用可能なプレースホルダー:
    # %message%:        ゲーム内で見られるメッセージに参加
    #
    MinecraftPlayerJoinMessage:
      Enabled: true
      Webhook:
        Enable: false
        AvatarUrl: "%botavatarurl%"
        Name: "%botname%"
      Content: ""
      Embed:
        Enabled: true
        Color: "#00ff00"
        Author:
          ImageUrl: "%embedavatarurl%"
          Name: "%username% さんがサーバーに参加しました"
          Url: ""
        ThumbnailUrl: ""
        Title:
          Text: ""
          Url: ""
        Description: ""
        Fields: []
        ImageUrl: ""
        Footer:
          Text: ""
          IconUrl: ""
        Timestamp: false
    #
    # PlayerFirstJoinで使用可能なプレースホルダー:
    # %message%:        ゲーム内で見られるメッセージに参加
    #
    MinecraftPlayerFirstJoinMessage:
      Enabled: true
      Webhook:
        Enable: false
        AvatarUrl: "%botavatarurl%"
        Name: "%botname%"
      Content: ""
      Embed:
        Enabled: true
        Color: "#ffd700"
        Author:
          ImageUrl: "%embedavatarurl%"
          Name: "%username% さんがサーバーに初参加です"
          Url: ""
        ThumbnailUrl: ""
        Title:
          Text: ""
          Url: ""
        Description: ""
        Fields: []
        ImageUrl: ""
        Footer:
          Text: ""
          IconUrl: ""
        Timestamp: false
    #
    # PlayerLeaveで使用可能なプレースホルダー:
    # %message%:        ゲーム内のメッセージを残す
    #
    MinecraftPlayerLeaveMessage:
      Enabled: true
      Webhook:
        Enable: false
        AvatarUrl: "%botavatarurl%"
        Name: "%botname%"
      Content: ""
      Embed:
        Enabled: true
        Color: "#ff0000"
        Author:
          ImageUrl: "%embedavatarurl%"
          Name: "%username% さんがサーバーから退出しました"
          Url: ""
        ThumbnailUrl: ""
        Title:
          Text: ""
          Url: ""
        Description: ""
        Fields: []
        ImageUrl: ""
        Footer:
          Text: ""
          IconUrl: ""
        Timestamp: false
    #
    # PlayerDeathで使用可能なプレースホルダー:
    # %deathmessage%: 死亡メッセージ
    # %world%:        プレイヤーが死亡したワールドの名前
    #
    MinecraftPlayerDeathMessage:
      Enabled: true
      Webhook:
        Enable: false
        AvatarUrl: "%botavatarurl%"
        Name: "%botname%"
      Content: ""
      Embed:
        Enabled: true
        Color: "#000000"
        Author:
          ImageUrl: "%embedavatarurl%"
          Name: "%deathmessage%"
          Url: ""
        ThumbnailUrl: ""
        Title:
          Text: ""
          Url: ""
        Description: ""
        Fields: []
        ImageUrl: ""
        Footer:
          Text: ""
          IconUrl: ""
        Timestamp: false
    #
    # PlayerAchievementメッセージで使用可能なプレースホルダー：
    # %achievement%: メッセージ内容
    # %world%:       実績を得たときにいたワールドの名前
    #
    MinecraftPlayerAchievementMessage:
      Enabled: true
      Webhook:
        Enable: false
        AvatarUrl: "%botavatarurl%"
        Name: "%botname%"
      Content: ""
      Embed:
        Enabled: true
        Color: "#ffd700"
        Author:
          ImageUrl: "%embedavatarurl%"
          Name: "%username% は進捗 %achievement% を達成した！"
          Url: ""
        ThumbnailUrl: ""
        Title:
          Text: ""
          Url: ""
        Description: ""
        Fields: []
        ImageUrl: ""
        Footer:
          Text: ""
          IconUrl: ""
        Timestamp: false

    # チャンネルトピックメッセージ
    # チャットチャンネルやコンソールチャンネルのトピックをサーバー情報で自動的に更新することに関連する設定です
    #
    # ChannelTopicUpdater______ChannelTopicFormat: チャンネルのトピックにX秒ごとに設定するメッセージ
    # ChannelTopicUpdater______ChannelTopicAtShutdownFormat: サーバーがシャットダウンしたときにチャネルのトピックに設定するメッセージ
    #
    # 使用できるキーワード:
    # %playercount%:   現在のプレイヤー数
    # %playermax%:     最大プレイヤー数
    # %date%:          現在の日時
    # %totalplayers%:  メインワールドに接続したプレイヤーの総数
    # %uptimemins%:    DiscordSRVが起動してから経過した時間（分）
    # %uptimehours%:   DiscordSRVが起動してから経過した時間（時）
    # %motd%:          サーバーのmotd
    # %serverversion%: サーバーのバージョン（例: Spigot-1.9）
    # %freememory%:    JVMの空きメモリー量（MB）
    # %usedmemory%:    JVMの使用メモリー量（MB）
    # %totalmemory%:   JVMの総メモリー量（MB）
    # %maxmemory%:     JVMの最大メモリー量（MB）
    # %freememorygb%:  JVMの空きメモリー量（GB）
    # %usedmemorygb%:  JVMの使用メモリー量（GB）
    # %totalmemorygb%: JVMの総メモリー量（GB）
    # %maxmemorygb%:   JVMの最大メモリー量（GB）
    # %tps%:           サーバーの平均TPS
    # PlaceholderAPIプレースホルダもサポートされています
    #
    ChannelTopicUpdaterChatChannelTopicFormat: "オンラインプレイヤー数 %playercount%/%playermax% | 接続したプレイヤーの総数 %totalplayers% | サーバー起動時間 %uptimemins% 分 | 最終更新 %date%"
    ChannelTopicUpdaterConsoleChannelTopicFormat: "TPS: %tps% | メモリー: %usedmemorygb%GB used/%freememorygb%GB free/%maxmemorygb%GB max | %serverversion%"
    # AtServerShutdownFormatsは%totalplayers%、%serverversion%、%date%のみをサポートしています。
    ChannelTopicUpdaterChatChannelTopicAtServerShutdownFormat: "サーバーはオフラインです | 接続したプレイヤーの総数 %totalplayers%"
    ChannelTopicUpdaterConsoleChannelTopicAtServerShutdownFormat: "サーバーはオフラインです | %serverversion%"

    # Discord コマンドメッセージ
    # プレイヤーが "/discord" コマンドを実行したときに送られるメッセージです
    # プレイヤーのために、参加すべきDiscordのURLや、コマンドのヘルプなどを表示してあげてください
    # ユーザーがDiscordサーバーに参加するために必要な招待リンクのプレースホルダーとして{INVITE}を使用し、config.ymlで構成されたDiscordInviteLinkを使用します
    #
    DiscordCommandFormat: "&bDiscordチャンネルに参加してください。{INVITE}&b. コマンドのヘルプを見るには、\"/discord ?\"を実行してください。"

    # 許可メッセージ形式なし
    NoPermissionMessage: "&cあなたはこのコマンドを実行する権限がありません。"

    # 不明なコマンドメッセージ
    UnknownCommandMessage: "&b指定されたコマンドは存在しません！"

    # サーバー起動/停止メッセージ
    # DiscordChatChannelServerStartupMessage: サーバー起動時に送信されるメッセージ。無効にするには空欄にしてください
    # DiscordChatChannelServerShutdownMessage: サーバー停止時に送信されるメッセージ。無効にするには空欄にしてください
    #
    DiscordChatChannelServerStartupMessage: ":white_check_mark: **サーバーが起動しました**"
    DiscordChatChannelServerShutdownMessage: ":octagonal_sign: **サーバーが停止しました**"

    # サーバーウォッチドッグメッセージ
    #
    # ウォッチドッグは、サーバがゲームチックを実行した最後の時間を常に監視します
    # 最後のtick以降の時間が設定された間隔（秒）を超えると、Discordメッセージがトリガーされます
    # サーバーが重くなっていることを通知するために使用してください
    #
    # ServerWatchdogMessage: メインのチャットチャンネルに送信されるメッセージ。
    #                        "<@USERID>" を使うと、指定したユーザーIDにメンションを送ることができます。例 "<@12345678901234567890>"
    #                        "<@&ROLEID>" を使うと、指定したロールIDにメンションを送ることができます。例 "<@&12345678901234567890>"; ロールIDは、DiscordSRVが起動するときのコンソールログメッセージにも表示しているので、参考にしてください。
    #                        "%guildowner%" を使うと、サーバーオーバーにメンションを送りことができます。
    #                        "%date%" を使うと、メッセージに時刻を表示することができます。
    #                        "%timeout%" を使用して、ServerWatchdogTimeout をプレースホルダーとして使用できます
    #                        不和のタイムスタンプ形式で使用するために "%timestamp%" プレースホルダーを使用できます
    #
    ServerWatchdogMessage: "<t:%timestamp%:R> %guildowner%、サーバーが%timeout%秒以内に応答しませんでした！ :fire::bangbang:"

    # アカウントリンクメッセージ
    # アカウントをリンクしたときに使われるメッセージです
    #
    # 使用できるキーワード:
    # CodeGenerated:                %code%:         プレーヤーとアカウントをリンクするために生成されたコード
    #                               %botname%:      Discordボットの名前
    # DiscordAccountLinked:         %name%:         Discordアカウントとリンクされた、Minecraftプレイヤーのプレイヤー名
    #                               %displayname%:  ユーザーのDiscordアカウントとMinecraftプレーヤーの表示名がリンクされていた
    #                               %uuid%:         Discordアカウントとリンクされた、MinecraftプレイヤーのUUID
    # DiscordAccountAlreadyLinked:  %uuid%:         ユーザーのリンクされたMinecraftアカウントのMinecraftuuid
    #                               %username%:     ユーザーのリンクされたMinecraftアカウントのMinecraftユーザー名
    # DiscordLinkedAccountRequired  %message%:      リンクされていないためにユーザーが送信できなかったメッセージ
    # MinecraftAccountLinked:       %id%:           Minecraftアカウントとリンクされた、DiscordユーザーのID
    #                               %username%:     Minecraftアカウントとリンクされた、Discordユーザーの名前
    # LinkedCommandSuccess:         %name%:         ユーザーのMinecraftアカウントがリンクされているDiscordユーザーのdiscordユーザー名
    # UnlinkCommandSuccess:         %name%:         ユーザーのMinecraftアカウントがリンクされているDiscordユーザーのdiscordユーザー名
    # MinecraftNobodyFound:         %target%:       結果が見つからない原因となった入力
    #
    # Discord
    CodeGenerated: "あなたのリンクコードは%code%です。あなたのアカウントとリンクするために、このコードだけを含むメッセージをDiscord上のボット(%botname%)にPMを送ってください。"
    UnknownCode: "そのようなコードは知りません。もう一度やり直してください。"
    InvalidCode: "それがあなたのコードで正しいですか？リンクコードは4文字の数字です。"
    DiscordAccountLinked: "あなたのDiscordアカウントは、%name% (%uuid%)とリンクしました"
    DiscordAccountAlreadyLinked: "あなたは既に %username% にリンクされています (%uuid%)"
    DiscordLinkedAccountRequired: "ゲームチャットに以下のメッセージを表示しようとしましたが、このサーバーではあなたのMinecraftアカウントをDiscordアカウントにリンクさせる必要があります。リンクさせるには、ゲーム内で `/discord link` を実行してください。 \n```%message%```"
    DiscordLinkedAccountCheckFailed: "アカウントがリンクされているかどうかを確認できません。しばらくしてからもう一度お試しください"
    # Minecraft
    ClickToCopyCode: "クリックしてコピー"
    MinecraftAccountLinked: "&bあなたのUUIDは、Discordユーザー%username% (%id%)とリンクしました"
    MinecraftAccountAlreadyLinked: "&bあなたのMinecraftアカウントはすでにDiscordアカウントに関連付けられています。 もしあなたがパーミッションを持っていれば、/discord unlinkを実行して2つのリンクを解除することができます。"
    LinkedCommandSuccess: "&bあなたのMinecraftアカウントは%name%にリンクされました。"
    UnlinkCommandSuccess: "&bあなたのMinecraftアカウントは、%name%とのリンクが解除されました。"
    MinecraftNoLinkedAccount: "&cあなたのMinecraftアカウントはDiscordアカウントにリンクされていません。"
    LinkingError: "&c現在、内部エラーのためにアカウントをリンクできません。サーバー管理チームに連絡してください。"
    MinecraftNobodyFound: "&c\"%target%\" と一致するものを Discord-ID/Discord-Name/Minecraft-Name/Minecraft-UUID から探しましたが、何も見つかりませんでした。"

  MorningGlorySeeds-config.yml: |
    webhook: "${CFG_MORNING_GLORY_SEEDS_WEBHOOK_URL}"

  LunaChat-config.yml: |
    # ${project.name} v${project.version}
    # @author     ucchy
    # @license    LGPLv3
    # @copyright  Copyright ucchy 2020


    # -------------------- 全般設定 --------------------

    # 言語設定
    lang: ja

    # チャンネルチャット機能を利用可能にするかどうか
    # Japanize機能のみを利用したい場合は、falseにしてください。
    enableChannelChat: true

    # イベント処理の優先度を設定できます。
    # 他のプラグインとの組み合わせでうまく動かないときに使用してください。
    # LOWEST, LOW, NORMAL, HIGH, HIGHEST のどれかを指定できます。
    playerChatEventListenerPriority: 'HIGHEST'


    # -------------------- チャンネルチャット設定 --------------------

    # チャンネルチャットに入っていない人の発言を、グローバルとして扱うかどうか
    noJoinAsGlobal: true

    # チャンネルチャットの発言内容を、ログに残すかどうか
    loggingChat: true

    # チャンネルチャットの発言内容を、サーバーコンソールに表示するかどうか
    displayChatOnConsole: true

    # グローバルマーカー。
    # これが発言の頭に入っている場合は、一時的にグローバル発言になる。
    globalMarker: '!'

    # 全てのメンバーが退出したときに、チャンネルを削除するかどうか
    zeroMemberRemove: false

    # ログイン時に、参加中チャンネルを表示するかどうか
    showListOnJoin: false

    # /ch join コマンドで存在しないチャンネルを指定したときに、
    # チャンネルを新規作成して入室するかどうか
    createChannelOnJoinCommand: false

    # 通常のチャットの代わりに、既定として使用するグローバルチャンネル。
    # グローバルチャンネルを作らず通常のチャットを使用する場合は、
    # から文字列 「''」 を指定すること。
    globalChannel: ''

    # サーバーに参加したユーザーに必ず参加させるチャンネル。
    # グローバルチャンネルとは別で指定できる。
    # 複数のチャンネルを設定可能。例）forceJoinChannels: ['L', 'M', 'N']
    forceJoinChannels: []

    # formatコマンド実行時に、必ず含まれる必要があるキーワード。
    formatConstraint: ['%username', '%msg']

    # チャンネルを作成したときに、デフォルトで設定されるフォーマット設定。
    # フォーマット設定には、下記のキーワードが使用できます。
    # %ch       : チャンネル名
    # %color    : チャンネルカラー
    # %displayname : 発言者表示名
    # %player   : 発言者ID
    # %server   : 発言者の接続サーバー名（BungeeCord側に導入したときに有効です。）
    # %world    : 発言したワールド名
    # %prefix   : プレフィックス（Vaultとパーミッション管理プラグインが導入されている場合に置き換えられます）
    # %suffix   : サフィックス（Vaultとパーミッション管理プラグインが導入されている場合に置き換えられます）
    # %date     : 日付
    # %time     : 時刻
    # %msg      : 発言内容（Japanize変換された場合は、Japanize結果を含みます。）
    defaultFormat: '&f[%color%ch&f]%prefix%displayname%suffix&a:&f %msg'

    # OPの画面に、全チャンネルの発言内容を表示する設定。
    opListenAllChannel: false

    # チャンネルを新規作成するときに、チャンネル名が満たさなければならない、最低文字列長。
    # 指定されたチャンネル名がこの文字数を下回る場合は、エラーになってチャンネルを作成できません。
    minChannelNameLength: 4

    # チャンネルを新規作成するときに、チャンネル名が満たさなければならない、最大文字列長。
    # 指定されたチャンネル名がこの文字数を上回る場合は、エラーになってチャンネルを作成できません。
    maxChannelNameLength: 20

    # クイックチャンネルチャット機能を有効化するかどうか。
    # クイックチャンネルチャットは、「(チャンネル名 or エイリアス) + (専用の記号) + (発言内容) 」を発言すると使用できます。
    # 例えば、mainチャンネルにエイリアスmを設定しておくと、mainチャンネルを発言先にしなくても、
    # m:こんにちは！
    # と発言することで、mainチャンネルに発言を行うことができます。
    enableQuickChannelChat: true

    # クイックチャンネルチャット機能に使用する記号。
    quickChannelChatSeparator: ':'


    # -------------------- プライベートメッセージ設定 --------------------

    # /tell や /msg や /r コマンドでプライベートメッセージを送信するときに、
    # 適用されるフォーマット設定。
    # フォーマット設定には、下記のキーワードが使用できます。
    # %ch       : チャンネル名（「%player>%to」と同一です。）
    # %displayname : 発言者表示名
    # %player   : 発言者ID
    # %server   : 発言者の接続サーバー名（BungeeCord側に導入したときに有効です。）
    # %to       : 発言の相手（受信者）のID
    # %recieverserver : 受信者の接続サーバー名（BungeeCord側に導入したときに有効です。）
    # %world    : 発言したワールド名（spigot側に導入したときに有効です。MultiVerseが導入されている場合は、ワールドの表示名を取得して使用します。）
    # %prefix   : プレフィックス（VaultとPermissionsExが導入されている場合に置き換えられます）
    # %suffix   : サフィックス（VaultとPermissionsExが導入されている場合に置き換えられます）
    # %date     : 日付
    # %time     : 時刻
    # %msg      : 発言内容（Japanize変換された場合は、Japanize結果を含みます。）
    defaultFormatForPrivateMessage: '&7[%player -> %to]&f %msg'
    #defaultFormatForPrivateMessage: '&7[%player@%server > %to@%recieverserver] %msg'


    # -------------------- dynmap連携設定 --------------------

    # ブロードキャストチャンネルの発言内容を、dynmapに送信するかどうか。
    # dynmapがロードされていない場合は、この設定は無視される（false扱い）。
    sendBroadcastChannelChatToDynmap: true

    # dynmapへ送信するときに、チャンネルのフォーマットを反映して送信するかどうか。
    # trueにするとチャンネルフォーマットを反映したメッセージをdynmapに表示します。
    # falseにするとメッセージのみをdynmapに表示します。
    # 参考：https://github.com/ucchyocean/LunaChat/issues/68
    sendFormattedMessageToDynmap: false

    # dynmapのWebUIから発言された発言内容を表示するチャンネル。
    # dynmapChannelが無指定で、globalChannelが指定されているなら、グローバルチャンネルに、
    # dynmapChannelが無指定で、globalChannelも無指定なら、通常チャットに発言される。
    dynmapChannel: ''



    # -------------------- NGワード設定 --------------------

    # NGワード設定。正規表現が指定可能です。
    # ここに設定されたワードを発言したプレイヤーは、NGワード部分がマスクされます。
    ngword:
    - 'ちん(こ|ぽ|ちん)'

    # NGワード発言時の動作設定。mask、mute、kick、ban の4つのいずれかが設定可能。
    # mask : NGワードをマスクする
    # mute : NGワードをマスクしたのち、発言したプレイヤーをチャンネルからMuteする
    # kick : NGワードをマスクしたのち、発言したプレイヤーをチャンネルからキックする
    # ban  : NGワードをマスクしたのち、発言したプレイヤーをチャンネルからBANする
    # ※ 通常チャット（非チャンネルチャット）の場合は、
    #    kickやbanを設定しても、マスクのみが実行されます。
    ngwordAction: mask



    # -------------------- 通常チャット設定 --------------------

    # 通常チャット（非チャンネルチャット）の装飾を、LunaChatから行うかどうか。
    enableNormalChatMessageFormat: true

    # チャット装飾のフォーマット設定。
    # フォーマット設定には、下記のキーワードが使用できます。
    # %displayname : 発言者表示名
    # %player   : 発言者ID
    # %world    : 発言したワールド名（spigot側に導入したときに有効です。MultiVerseが導入されている場合は、ワールドの表示名を取得して使用します。）
    # %server   : 発言者の接続サーバー名（BungeeCord側に導入したときに有効です。）
    # %prefix   : プレフィックス（VaultとPrefix/Suffixプラグインが導入されている場合に置き換えられます）
    # %suffix   : サフィックス（VaultとPrefix/Suffixプラグインが導入されている場合に置き換えられます）
    # %date     : 日付
    # %time     : 時刻
    # %msg      : 発言内容（Japanize変換された場合は、Japanize結果を含みます。）
    normalChatMessageFormat: '&f%prefix%displayname%suffix&a:&f %msg'
    #normalChatMessageFormat: '&f%displayname@%server&a:&f %msg'

    # 通常チャット（非チャンネルチャット）で、カラーコード（&aや&bなど）を
    # 使用可能にするかどうか。falseに設定すると、カラーコードは変換されません。
    enableNormalChatColorCode: true

    # 通常チャット（非チャンネルチャット）をクリック可能にするかどうか。
    # クリック可能にすると、プレイヤー名をクリックしてプライベートメッセージを送ることができるようになりますが、
    # 通常チャットをキャンセルしてクリック可能な別のメッセージを流すので、他のチャット関連プラグインとの連携が
    # うまくいかなくなる可能性があります。
    # なお、この設定に関係なく、チャンネルチャットは常にクリック可能です。
    enableNormalChatClickable: false

    # 通常チャット（非チャンネルチャット）をコンソールにログ出力するかどうか。
    # 本項目をfalseにしても、コンソールに記録される場合があります。
    displayNormalChatOnConsole: true


    # -------------------- Japanize変換設定 --------------------

    # ローマ字をかな文字や漢字に変換する設定。
    # none/kana/GoogleIME の3つのいずれかが設定可能。
    # none      : 変換なし。
    # kana      : かな変換のみ。
    # GoogleIME : かな変換したのち、GoogleIMEを使って漢字変換する。
    japanizeType: GoogleIME

    # かな変換や漢字変換時に、
    # 変換結果を元の発言内容と合わせて1行で表示するか、
    # 変換結果のみを2行目に表示するかを、設定する。
    # 1行表示の例：
    #     <ucchy> aiueo (あいうえお)
    # 2行表示の例：
    #     <ucchy> aiueo
    #     [JP] あいうえお
    japanizeDisplayLine: 1

    # japanizeDisplayLine が 1 のときの、表示フォーマットを設定する。
    # フォーマット設定には、下記のキーワードが使用できます。
    # %msg      : 元の発言内容
    # %japanize : Japanize変換された発言内容
    japanizeLine1Format: '%msg &6(%japanize)'

    # japanizeDisplayLine が 2 のときの、2行目の表示フォーマットを設定する。
    # フォーマット設定には、下記のキーワードが使用できます。
    # %msg      : 元の発言内容
    # %japanize : Japanize変換された発言内容
    japanizeLine2Format: '&6[JP] %japanize'

    # 発言に含まれているプレイヤー名を、Japanize変換から除外するかどうかを設定する。
    japanizeIgnorePlayerName: true

    # ノンジャパナイズマーカー。
    # これが発言の頭に入っている場合は、一時的にJapanize変換を実行しない。
    noneJapanizeMarker: '#'

    # プレイヤーのJapanize変換を、デフォルトでオンにするかオフにするかを設定する。
    japanizePlayerDefault: true


    # -------------------- BungeeCord設定 --------------------

    # BungeeCord構成のときに、チャットイベントを配下のspigotサーバーに流し、
    # 返送してもらってから処理を行うモードです。
    # 配下のすべてのspigotサーバーにも、LunaChatの導入が必要です。
    bungeePassThroughMode: false
