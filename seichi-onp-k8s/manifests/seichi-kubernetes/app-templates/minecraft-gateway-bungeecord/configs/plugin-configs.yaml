kind: ConfigMap
metadata:
  name: bungeecord-plugin-configs
apiVersion: v1
data:
  BungeeCordPrometheusExporter-config.json: |
    {
      "host": "0.0.0.0",
      "port": "9225",
      "prefix": "bungeecord_",
      "jvm_gc": "true",
      "jvm_memory": "true",
      "jvm_threads": "true",
      "player_connects": "true",
      "player_disconnects": "true",
      "server_list_pings": "true",
      "managed_servers": "true",
      "installed_network_plugins": "true",
      "online_players": "true",
      "online_player_latency": "true",
      "redis_player_connects": "true",
      "redis_player_disconnects": "true",
      "redis_online_players": "true",
      "redis_bungee_online_proxies": "true"
    }

  BungeeHubCommand-config.yml: |
    # https://github.com/GiganticMinecraft/BungeeHubCommand/blob/a33b73f258de7d484fa961d000921275fb51c45b/src/main/resources/config.yml
    # Needs override.
    # Provide name of the server to which players are sent when executing the "hub" command
    hub-server-name:

    # The message to be shown when a player already connected to the hub server tryed to run the "hub" command.
    already-connected-message: "You are already at the hub server!"

  BungeeKick-config.yml: |
    # Needs override.
    # This is where the player is kicked to. This is usually the lobby/hub server
    ServerName:

    # Message to be sent to the player who has been kicked. This message is followed by the kick reason
    KickMessage: '&6You have been kicked! Reason:&4 '

    # Set this to True if you want the kicked player to be able to see the kick reason.
    ShowKickMessage: True

  BungeeSemaphore-config.yml: |
    # Needs override.
    # Provide a regex to match servers that needs a semaphore guard.
    synchronized-server-regex:

    redis:
      host: seichi-redisbungee-redis
      port: 11788

    locale:
      error:
        failed-saving-data: "Spigotサーバーがデータの保存に失敗しました！"

    timeout:
      # Timeout for locking out players from servers when downstream saves are not confirmed.
      # Once this duration passes, a locked out player is able to join the target downstream server.
      # Default is 60 seconds timeout. Specify negative values to disable timeouts.
      millis: 4000

  RedisBungee-config.yml: |
    # https://github.com/ProxioDev/RedisBungee/blob/2df0b9fc60bea076c29b178425af358d0ed0e7fc/src/main/resources/example_config.yml

    # RedisBungee configuration file.
    # PLEASE READ THE WIKI: https://github.com/Limework/RedisBungee/wiki

    # The Redis server you use.
    # Get Redis from http://redis.io/
    redis-server: seichi-redisbungee-redis
    redis-port: 11787
    # OPTIONAL: If your Redis server uses AUTH, set the password required.
    redis-password: ""

    # Maximum connections that will be maintained to the Redis server.
    # The default is 8. This setting should be left as-is unless you have some wildly
    # inefficient plugins or a lot of players.
    max-redis-connections: 8

    # since redis can support ssl by version 6 you can use ssl in redis bungee too! 
    # you must disable this if redis version is under 6 you must disable this or connection wont work!!!
    useSSL: false

    # An identifier for this BungeeCord instance. Will randomly generate if leaving it blank.
    server-id: "test1"
    # Should use random string? if this  is enabled the proxy id will be like this if server-id is test1: "test1-66cd2aeb-91f3-43a7-a106-e0307b098652"
    # or if id is limework-bungee it will be "limework-bungee-66cd2aeb-91f3-43a7-a106-e0307b098652"
    # this great for servers who run replicas in Kubernetes or any auto deploying replica service
    # and used for if proxy died in a kubernetes network and deleted then new proxy setup itself.
    use-random-id-string: false

    # Whether or not RedisBungee should install its version of regular BungeeCord commands.
    # Often, the RedisBungee commands are desired, but in some cases someone may wish to
    # override the commands using another plugin.
    #
    # If you are just denying access to the commands, RedisBungee uses the default BungeeCord
    # permissions - just deny them and access will be denied.
    #
    # Please note that with build 787+, most commands overridden by RedisBungee were moved to
    # modules, and these must be disabled or overridden yourself.
    register-bungee-commands: true

    # A list of IP addresses for which RedisBungee will not modify the response for, useful for automatic
    # restart scripts.
    exempt-ip-addresses: []

  MagicMOTD-config.yml: |
    # The player name to use if the IP has not been seen before.
    default_player_name: player

    # Define each MOTD here.
    # You can use formatting codes with § or & and newlines with \n.
    # To center text, write %C% AT THE START of the line, either at the start of the message or after a newline.
    # (Note: this is dependent on the player's font size. The default size is used when centering.)
    # Centering works best with Latin characters (abcd...), but will still work with other character sets.
    # You can use templates to show dynamic information.
    # Available templates:
    # %player% - Player name
    # %online% - Online player count
    # %max% - Max player count
    motds:
      - "%c%§aHello, §e%player%§a!"
      - "&cThere are &e%online%/%max%&c players online!"
      - "%C%§eCentered Line 1\n%C%Centered Line 2"
      - "%C%§eCentered Line 1\nUncentered Line 2"

    # When using the /forcemotd command, you can specify the position in the list of messages to force.
    # For example, to force the first message, you would use /forcemotd 1.
    # To stop forcing a message, use /forcemotd (without a number).

    # Define each message here.
    # These are the messages sent to users of the commands. You may edit them to change or translate them, for example.
    # For the force.out-of-range message, you can use the %max% template to show the maximum index.
    # For the force.success message, you can use the %index% and %content% templates to show the index and content of the forced MOTD.
    messages:
      too-many-args: "Too many arguments!"
      force:
        command-descriptor: "When using the /forcemotd command, you can specify the position in the list of messages to force."
        command-example: "For example, /forcemotd 1 will force the first message in the list."
        reset-descriptor: "To reset the forced MOTD, run /forcemotd without any arguments."
        reset-success: "Reset the forced MOTD successfully."
        invalid-index: "Invalid index!"
        out-of-range: "Index out of range! Specify a number between 1 and %max%."
        success: "Set the forced MOTD to %index%. Content: %content%"
      reload:
        pending: "Reloading the MagicMOTD config..."
        success: "Reloaded the MagicMOTD config successfully!"
        fail: "Failed to reload the MagicMOTD config! Please check the proxy console for more information."
