kind: ConfigMap
metadata:
  name: bungeecord-plugin-configs
apiVersion: v1
data:
  BungeeCordPrometheusExporter-config.json: |
    {
      "host": "0.0.0.0",
      "port": "9225",
      "prefix": "bungeecord_",
      "jvm_gc": "true",
      "jvm_memory": "true",
      "jvm_threads": "true",
      "player_connects": "true",
      "player_disconnects": "true",
      "server_list_pings": "true",
      "managed_servers": "true",
      "installed_network_plugins": "true",
      "online_players": "true",
      "online_player_latency": "true",
      "redis_player_connects": "true",
      "redis_player_disconnects": "true",
      "redis_online_players": "true",
      "redis_bungee_online_proxies": "true"
    }

  BungeeHubCommand-config.yml: |
    # https://github.com/GiganticMinecraft/BungeeHubCommand/blob/a33b73f258de7d484fa961d000921275fb51c45b/src/main/resources/config.yml
    # Needs override.
    # Provide name of the server to which players are sent when executing the "hub" command
    hub-server-name:

    # The message to be shown when a player already connected to the hub server tryed to run the "hub" command.
    already-connected-message: "You are already at the hub server!"

  BungeeKick-config.yml: |
    # Needs override.
    # This is where the player is kicked to. This is usually the lobby/hub server
    ServerName:

    # Message to be sent to the player who has been kicked. This message is followed by the kick reason
    KickMessage: '&6You have been kicked! Reason:&4 '

    # Set this to True if you want the kicked player to be able to see the kick reason.
    ShowKickMessage: True

  BungeeSemaphore-config.yml: |
    # Needs override.
    # Provide a regex to match servers that needs a semaphore guard.
    synchronized-server-regex:

    redis:
      host: 192.168.1.188
      port: 11788

    locale:
      error:
        failed-saving-data: "Spigotサーバーがデータの保存に失敗しました！"

    timeout:
      # Timeout for locking out players from servers when downstream saves are not confirmed.
      # Once this duration passes, a locked out player is able to join the target downstream server.
      # Default is 60 seconds timeout. Specify negative values to disable timeouts.
      millis: 4000

  RedisBungee-config.yml: |
    # https://github.com/ProxioDev/RedisBungee/blob/0.10.1/RedisBungee-API/src/main/resources/config.yml

    # RedisBungee configuration file.
    # Get Redis from http://redis.io/

    # The Redis server you use.
    # these settings are ignored when cluster mode is enabled.
    redis-server: 127.0.0.1
    redis-port: 6379

    # Cluster Mode
    # enabling this option will enable cluster mode.
    cluster-mode-enabled: false

    # FORMAT:
    # redis-cluster-servers:
    # - host: 127.0.0.1
    #   port: 2020
    # - host: 127.0.0.1
    #   port: 2021
    # - host: 127.0.0.1
    #   port: 2021

    # you can set single server and Jedis will automatically discover cluster nodes,
    # but might fail if this single redis node is down when Proxy startup, its recommended put the all the nodes
    redis-cluster-servers:
      - host: 127.0.0.1
        port: 6379

    # THIS FEATURE IS REDIS V6+
    # OPTIONAL: if your redis uses acl usernames set the username here. leave empty for no username.
    redis-username: ""

    # OPTIONAL but recommended: If your Redis server uses AUTH, set the password required.
    redis-password: ""

    # Maximum connections that will be maintained to the Redis server.
    # The default is 10. This setting should be left as-is unless you have some wildly
    # inefficient plugins or a lot of players.
    max-redis-connections: 10

    # since redis can support ssl by version 6 you can use ssl / tls in redis bungee too!
    # but there is more configuration needed to work see https://github.com/ProxioDev/RedisBungee/issues/18
    # Keep note that SSL/TLS connections will decrease redis performance so use it when needed.
    useSSL: false

    # An identifier for this BungeeCord / Velocity instance. Will randomly generate if leaving it blank.
    proxy-id: "test-1"

    # since version 0.8.0 Internally now uses JedisPooled instead of Jedis, JedisPool.
    # which will break compatibility with old plugins that uses RedisBungee JedisPool
    # so to mitigate this issue, we will instruct RedisBungee to init an JedisPool for compatibility reasons.
    # enabled by default
    # ignored when cluster mode is enabled
    enable-jedis-pool-compatibility: true
    # max connections for the compatibility pool
    compatibility-max-connections: 3

    # Register redis bungee legacy commands
    # if this disabled override-bungee-commands will be ignored
    register-legacy-commands: true

    # Whether or not RedisBungee should install its version of regular BungeeCord commands.
    # Often, the RedisBungee commands are desired, but in some cases someone may wish to
    # override the commands using another plugin.
    #
    # If you are just denying access to the commands, RedisBungee uses the default BungeeCord
    # permissions - just deny them and access will be denied.
    #
    # Please note that with build 787+, most commands overridden by RedisBungee were moved to
    # modules, and these must be disabled or overridden yourself.
    override-bungee-commands: true

    # A list of IP addresses for which RedisBungee will not modify the response for, useful for automatic
    # restart scripts.
    exempt-ip-addresses: []

    # restore old login when online behavior before 0.9.0 update
    # uncomment to enable it
    # disable-kick-when-online: true

    # Config version DO NOT CHANGE!!!!
    config-version: 1

  SwiftMOTD-config.yml: |
    # Override if necessary.
    motds:
      generic: []
      dynamic: []
