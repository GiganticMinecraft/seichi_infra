ingress:
  # minecraft-server
  # cloudflare-service-tokenによるアクセス制御を行う
  - hostname: mcserver--cre.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25568"
  - hostname: mcserver--eve.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25574"
  - hostname: mcserver--h1.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25567"
  - hostname: mcserver--kagawa.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25593"
  - hostname: mcserver--lobby.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.100:25565"
  - hostname: mcserver--petra.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25585"
  - hostname: mcserver--reset.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25591"
  - hostname: mcserver--s1.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.1:25565"
  - hostname: mcserver--s2.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.2:25565"
  - hostname: mcserver--s3.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.3:25565"
  - hostname: mcserver--s5.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.5:25565"
  - hostname: mcserver--s7.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.7:25565"
  - hostname: mcserver--spade.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.187:25501"
  
  # dynmap-webserver
  # cloudflare-service-tokenによるアクセス制御はしない
  - hostname: s1-map-gigantic.seichi.click
    service: "http://192.168.2.1:80"
  - hostname: s2-map-gigantic.seichi.click
    service: "http://192.168.2.2:80"
  - hostname: s3-map-gigantic.seichi.click
    service: "http://192.168.2.3:80"
  - hostname: s5-map-gigantic.seichi.click
    service: "http://192.168.2.5:80"
  - hostname: s7-map-gigantic.seichi.click
    service: "http://192.168.2.7:80"
  - hostname: cre-map-gigantic.seichi.click
    service: "http://192.168.1.187:80"
  - hostname: h1-map-spring.seichi.click
    service: "http://192.168.1.187:82"
  
  # votelitener-server
  # nuVotifierが待ち受けておりminecraft.jpやmonocraft.netで投票されるとここに投票パケットが飛ぶ
  # cloudflaredの仕様としてtcpトンネルの対向はcloudflared access tcpで終端してやる必要がある為
  # proxy-kubernetes上にcloudflaredを配置して終端し、そのポイントをService(Type: LoadBalancer)で公開する
  # よってここで指定するエンドポイントはproxy-kubernetes上のcloudflaredからしかアクセスしないため
  # cloudflare-service-tokenによるアクセス制御の範囲に含めて良い
  - hostname: votelistener.tcp-prod-network.seichi.click
    service: "tcp://192.168.2.99:32957"

  # redis-server
  # cloudflare-service-tokenによるアクセス制御を行う
  - hostname: redis--bungeesemaphore.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.188:11788"
  - hostname: redis--redisbungee.tcp-prod-network.seichi.click
    service: "tcp://192.168.1.188:11787"

  # redmine-webserver
  # cloudflare-service-tokenによるアクセス制御はしない
  - hostname: redmine.seichi.click
    service: "https://192.168.1.187:3443"
    originRequest:
      noTLSVerify: true
  
  # seichiranking-webserver
  # cloudflare-service-tokenによるアクセス制御はしない
  - hostname: ranking-gigantic.seichi.click
    service: "http://192.168.1.187:8086"
  
  # onp-admin-grafana-webserver
  # cloudflare-service-tokenによるアクセス制御はしない(grafana側でGitHub-SSO認証かけてる)
  - hostname: grafana.onp.admin.seichi.click
    service: "http://192.168.3.20:3000"
  
  # elasticsearch-server
  # k8s上のfilebeatなどからのログ連携を想定
  # cloudflare-service-tokenによるアクセス制御を行う
  - hostname: elasticsearch.tcp-prod-network.seichi.click
    service: "tcp://192.168.3.20:9200"

  - service: http_status:404
