name: CI
on: 
  push:
    paths:
      - ".github/workflows/mod_downloader.yaml"
      - "docker-images/mod-downloader/**"

env:
  IMAGE: ghcr.io/giganticminecraft/mod-downloader

jobs:
  lint-and-test:
    name: Lint and test application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'docker-images/mod-downloader/go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: docker-images/mod-downloader

  build-image:
    name: Build docker image (and publish on master)
    needs: [lint-and-test]
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: docker-images/mod-downloader
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=sha,prefix=sha-,suffix=,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Build (and push if on main)
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./docker-images/mod-downloader/
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          # すべてのビルドステージのすべてのレイヤーをキャッシュして欲しいのでmode=max
          cache-to: type=gha,mode=max
