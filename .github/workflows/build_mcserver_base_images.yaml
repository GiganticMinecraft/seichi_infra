name: Build Minecraft Server Base Images
on: 
  push:
    paths:
      - ".github/workflows/build_mcserver_base_images.yaml"
      - "docker-images/mcservers/base-server-image/**"

jobs:
  build-image:
    name: Build docker image (and publish on main)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          # TODO: let renovate recognize image tags
          - mcserver_base_image: itzg/minecraft-server:2022.15.0-java8-jdk
            output_image_prefix: java8-jdk-
          - mcserver_base_image: itzg/minecraft-server:2022.15.0-java17-jdk
            output_image_prefix: java17-jdk-

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/giganticminecraft/seichi_minecraft_server_base
          tags: |
            type=sha,prefix=${{ matrix.output_image_prefix }},suffix=,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Build (and push if on main)
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.build_context }}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          # すべてのビルドステージのすべてのレイヤーをキャッシュして欲しいのでmode=max
          cache-to: type=gha,mode=max
          build-args: |
            MCSERVER_BASE_IMAGE=${{ matrix.mcserver_base_image }}

