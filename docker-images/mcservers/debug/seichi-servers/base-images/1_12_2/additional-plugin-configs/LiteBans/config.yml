# LiteBans config.yml generated by version 2.4.7

# If bungeecord is set to true, banned players will be kicked from BungeeCord itself.
# (Players will not be kicked to the lobby when they are banned.)
# This option has no effect if the plugin is running directly under BungeeCord.
bungeecord: false

# If this option is enabled and the server is connected to a remote database (e.g. MySQL),
# LiteBans will synchronize across all servers connected to that database with sync enabled.
sync: true

# If enabled, broadcasts will be synchronized.
sync_broadcasts: true

# If enabled, notifications will be synchronized.
sync_notifications: true

# If enabled, dupeip notifications will be synchronized.
# This will appear multiple times if a player joins multiple servers, so you might want to leave this disabled.
sync_dupeip_notifications: false

# The server name is an identifier used in cross-server synchronization.
# It represents a single plugin instance (or group of instances) and can be updated at any time.
# If you need per-server bans, you have to change server_name on all instances
# The "$serverScope" and "$serverOrigin" variables can be used in messages.
# Maximum length is 32 characters.
server_name: '${CFG_REPLACEMENT__LITEBANS_SERVER_NAME}'

# This option decides which server(s) will be affected in commands by default.
default_server_scope: '*'

sql:
  # H2, MySQL, MariaDB, and PostgreSQL are supported database drivers.
  driver: MySQL

  ## MySQL/PostgreSQL settings ##
  # If using H2, the database will be stored in the LiteBans plugin folder,
  # and most of these settings won't apply.

  # Database server address.
  address: ${CFG_REPLACEMENT__LAGMONITOR_MYSQL_ADDRESS}

  # Database name, username and password.
  database: 'liteban'
  username: ${CFG_REPLACEMENT__LAGMONITOR_MYSQL_USER}
  password: ${CFG_REPLACEMENT__LAGMONITOR_MYSQL_PASSWORD}

  table_prefix: ''

  # LiteBans utilizes connection pooling for extra performance and reliability.
  # min_connections: Minimum amount of pooled connections.
  # max_connections: Maximum amount of pooled connections. See: https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
  # timeout: Connection timeout.
  # idle_timeout: Maximum amount of time a pooled connection can remain idle before it is closed for inactivity.
  pool:
    min_connections: 1
    max_connections: 10
    timeout: 30 seconds
    idle_timeout: 1 minute

  # Database engine. Only applies to MySQL.
  engine: InnoDB

  options: 'useSSL=false&serverTimezone=UTC'

  # Format: <name>:<class>[:URL:version]
  # SQLite is only included here for backwards compatibility, it is no longer supported (use H2 instead).
  drivers:
  - version:4
  - 'mysql:com.mysql.cj.jdbc.Driver:https://repo1.maven.org/maven2/mysql/mysql-connector-java/{}/mysql-connector-java-{}.jar:8.0.18'
  - 'pgsql:org.postgresql.Driver:https://repo1.maven.org/maven2/org/postgresql/postgresql/{}/postgresql-{}.jar:9.4-1201-jdbc41'
  - 'mariadb:org.mariadb.jdbc.Driver:https://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/{}/mariadb-java-client-{}.jar:2.5.2'
  - 'sqlite:org.sqlite.JDBC:https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/{}/sqlite-jdbc-{}.jar:3.8.11.1'
  - 'h2:org.h2.Driver:https://repo1.maven.org/maven2/com/h2database/h2/{}/h2-{}.jar:1.4.197'

durations:
  # The highest limit matched by permissions will be used for duration limits.
  # If a player has "litebans.group.unlimited", they will bypass these.
  limits:
    moderator:
      permission: litebans.group.moderator
      tempban: 1 month
      tempmute: 1 month
    helper:
      permission: litebans.group.helper
      tempban: 15 days
      tempmute: 7 days
    other:
      permission: none
      tempban: 7 days
      tempmute: 1 day
  # If true, players will not get an error when using a duration higher than the configured limit.
  # The duration will be rounded down to the maximum duration instead.
  round_down: true

mutes:
  enabled: true

  # All of these commands can not be used while muted.
  command_blacklist:
  - /me
  - /say
  - /tell
  - /whisper
  - /reply
  - /pm
  - /message
  - /msg
  - /emsg
  - /epm
  - /etell
  - /ewhisper
  - /w
  - /m
  - /t
  - /r
  - /mail send
  # This command blacklist specifically applies to players who are affected by /mutechat.
  mutechat_command_blacklist:
  - /me
  - /say
  # If enabled, muted players cannot use blacklisted commands containing ":", for example: "/minecraft:me".
  # This does not prevent muted players from using non-blacklisted commands with ":".
  prevent_bypass: true

# If enabled, a ban or mute reason must be provided, otherwise players will get an error.
# When set to false, "default_ban_reason" and "default_mute_reason" in messages.yml are used as reasons when no reason is provided.
require_ban_mute_reason: false

warnings:
  # Warnings will expire after this duration has passed.
  expire_after: 7 days

  # Warning actions.
  # Format: <amount>[+]:<action>
  # If '+' is provided after the amount, the action will execute if the player has that amount of warnings or more.
  actions:
  - '3:/kick -s:$silent $player Final warning: $reason'
  - '4:/tempban -s:$silent $player 1 day Reached 4 warnings: $list'

  # If enabled, the console will execute warning actions.
  # Otherwise, the player who executes the last warning also executes the warning action.
  actions_execute_as_console: false

  # If enabled, all active warnings will be deactivated after a warning action is executed.
  delete_warnings_after_action: false

notify:
  # If enabled, players with the permission 'litebans.notify' or 'litebans.notify.banned_join' will be notified when a banned player tries to join.
  banned_player_join: true

  # If enabled, /dupeip output will be shown on join if the player meets certain conditions.
  dupeip_on_join: true

  # Notify if the player has one or more banned accounts on the same IP.
  # This requires `dupeip_on_join: true` but does not depend on `dupeip_on_join_threshold`.
  dupeip_on_banned_account: true

  # If you set this to a lower value, players with X accounts will send dupeip notifications.
  # This requires `dupeip_on_join: true`.
  dupeip_on_join_threshold: 9999999

  # If enabled, muted accounts will be detected with /dupeip.
  # This is disabled by default since it can increase the database load on larger servers especially if dupeip_on_join is enabled.
  dupeip_show_muted_accounts: false

  # Log all notifications to the console?
  notify_console: true

exempt:
  enable: true
  # By default, permission checks are global. You can set them to a specific world here.
  permission_world: default

  # Permission groups that are exempt from bans, mutes, warnings, and kicks.
  exempt_groups: []

  # Players who are exempt from bans, mutes, warnings, and kicks.
  # Format: <name/UUID>[:type]
  # Type can be ban, mute, warning, or kick. (All types apply if not specified)
  # Example:
  # exempt_players: ['Player', 'Player2', 'Player3', 'Player4:mute']
  exempt_players: []

geoip:
  enable: false
  # Anyone from these locations will not be able to join.
  # A full list of countries that can be blacklisted:
  # https://dev.maxmind.com/geoip/legacy/codes/iso3166/
  # Example:
  # blacklist: ['Australia', 'Brazil', 'Canada', 'Denmark']
  blacklist: []

  # If the whitelist is not empty, all countries which are not found in the list will be blocked.
  whitelist: []
  download:
    # Download links for the API and database, which are downloaded to the 'plugins/LiteBans/geoip' folder.
    # You shouldn't need to change these, but if it isn't working, you can search for these files.
    api:
    - https://repo1.maven.org/maven2/com/maxmind/geoip2/geoip2/2.1.0/geoip2-2.1.0.jar
    - https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.4.3/jackson-databind-2.4.3.jar
    - https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.4.3/jackson-core-2.4.3.jar
    - https://repo1.maven.org/maven2/com/maxmind/db/maxmind-db/1.0.0/maxmind-db-1.0.0.jar
    - https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.4.3/jackson-annotations-2.4.3.jar
    # Will be extracted and saved as 'GeoLite2-Country.mmdb'.
    db: https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz

security:
  # If enabled, only the console can see IP addresses in /dupeip output.
  # This does not prevent players from using /dupeip. It only prevents them from seeing IP addresses.
  dupeip: true
  # If enabled, only the console can use /iphistory.
  iphistory: true
  # If enabled, only the console can use "/litebans sqlexec".
  sqlexec: true

# Instead of "CONSOLE", this name will be used to represent the console.
console_sender_name: Console

# Use display names?
# This means that when moderators and punished players change their name using /nick,
# this name will be used in broadcasts and other messages instead of their regular name.
# The BungeeCord version of the plugin cannot detect Spigot-side display names.
use_display_names: false

# This allows /dupeip and /ipreport to scan every single IP address that a player has ever joined with. (Multiple IP scanning)
# If set to false, only the player's last IP address will be scanned.
# (This option requires `delete_previous_history: false`)
dupeip_scan_all_ips: false

# If disabled, all previous IP addresses will be recorded, allowing /iphistory to work.
delete_previous_history: true

# If enabled, LiteBans performs an additional database query on login to provide case-insensitive name bans.
# This also prevents players from evading bans by switching from offline-mode to online-mode (through FastLogin, for example).
ban_names: false

# Moderators cannot use /ban or /warn twice within a specific time frame (in seconds).
# Additionally, the same player cannot be punished twice.
# This can be bypassed with: "litebans.cooldown.bypass", "litebans.cooldown.bypass.ban", "litebans.cooldown.bypass.warn"
ban_cooldown: 3
warning_cooldown: 3

# If enabled, all previous login history will be unbanned when unbanning a player.
# Essentially a "chain unban" - it can resolve multiple IP bans at the same time and it will be more effective if "delete_previous_history" is disabled.
unban_all_history: false

# If a kick message contains any of these, it will not be added to the database.
# You can set this list to [''] if you don't want any kicks to be added to the database.
ignored_kick_messages: ['restarting']

# This option controls how often notifications are sent from a single player.
# When a player tries to join when banned or talk while muted,
# you won't see any more messages from them for a short while.
notification_throttle_ticks: 12000

# After configuring import options, run "/litebans import start" to begin the import.
# The import process occurs while the server is running, no downtime is required.
import:
  # You can import from: MaxBans, Ultrabans, BanHammer, BanManagerv4, BanManagerv5, BungeeAdminTools, AdvancedBan(MySQL only), LiteBans, Vanilla.
  # Vanilla means importing from banned-players.json, which is also used by Essentials.
  from: vanilla

  # If enabled, importing will be done from a SQLite database instead of a MySQL database.
  # You can ignore this if importing from banned-players.json.
  # If importing from LiteBans, H2 will be used instead of SQLite.
  sqlite: true

  # SQLite file locations:
  #  MaxBans: plugins/MaxBans/bans.db
  #  Ultrabans: plugins/Ultrabans/banlist.db
  #  BanHammer: plugins/BanHammer/BanHammer.db
  sqlite_file: plugins/MaxBans/bans.db

  import_ipbans: true
  ## MySQL import settings ##
  import_mysql_address: localhost:3306
  import_mysql_database: maxbans
  import_mysql_username: ''
  import_mysql_password: ''

##############################
###### Advanced settings #####
##############################

lockdown:
  # If enabled, /lockdown will continue after restarts.
  persist_enabled: true

# If enabled, the local system timezone will be used.
# UTC time will be stored in the database, but dates will be formatted using the timezone offset.
use_timezone: true

# If enabled, LiteBans will use the timezone stored in the database.
use_database_time: false

# This option allows you to disable recording IP history on specific servers under BungeeCord.
# Example: ignored_history_servers: ['Lobby']
# This is useful when you have a layer of authentication (e.g. AuthMe or 2FA auth) if unauthenticated players cannot leave the lobby server.
ignored_history_servers: []

# Players in this list will not be shown in /dupeip or /alts output.
# Names, UUIDs and IP addresses can be specified.
hidden_dupeip_players: []

# This option controls the behaviour of the "-N" flag. This flag prevents active bans/mutes from being overridden.
# If enabled, the "-N" flag will only prevent bans from being overridden if the active ban has a lower duration.
override_lower_duration: false

# This is the amount of bans shown on each page for /banlist.
# Note that ban entries can span 2-3 lines.
banlist_bans_per_page: 5

# Only show active bans for /banlist?
banlist_show_active_only: false

# Amount of entries to show on /history and /staffhistory by default.
default_history_limit: 10

# If enabled, online player names will be auto-completed.
# Example: /ban Pl -> /ban Player
# This has absolutely nothing to do with tab-completion.
autocomplete_online_player_names: false

# If enabled, AuthMe will be detected and IP history will only be added after a player has successfully logged in.
# This option will only work under Spigot, since AuthMe is a Spigot plugin.
support_authme: true

# If enabled, ProtocolLib will be detected and chat events will be cancelled before they can be processed by any other plugins.
# This can help prevent plugin conflicts which allow muted players to chat.
# This option will only work under Spigot, since ProtocolLib is a Spigot plugin.
use_protocollib: true

# If this is enabled, players with `litebans.clearchat.bypass` permission can bypass /clearchat.
allow_clearchat_bypass: false

# If enabled, players will be checked for bans after they have joined. (Spigot only)
check_after_join: false

# /ipreport will not show accounts that have no other players attached by default.
ipreport_minimum_accounts: 1

# If enabled, the plugin will notify you when an update is available.
update_check: true

debug_level: 0
